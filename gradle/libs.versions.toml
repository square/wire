[versions]
android = "4.1.1.4"
animalSniffer = "1.16"
animalSnifferGradle = "1.5.0"
assertj = "3.11.0"
coroutines = "1.5.2"
dokka = "1.5.30"
grpc = "1.44.1"
gson = "2.9.0"
guava = "31.1-jre"
javapoet = "1.13.0"
jimfs = "1.0"
jmh = "1.34"
jsr305 = "3.0.2"
junit = "4.13.2"
kotlin = "1.6.10"
kotlinpoet = "1.12.0"
ktlint = "0.42.1"
moshi = "1.13.0"
okhttp = "4.9.3"
okio = "3.0.0"
protobuf = "3.19.4"
protobufGradlePlugin = "0.8.18"

[libraries]
android = { module = "com.google.android:android", version.ref = "android" }
androidx-annotations = { module = "androidx.annotation:annotation", version = "1.1.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.0.2" }
androidx-compose = { module = "androidx.activity:activity-compose", version = "1.4.0" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version = "1.1.3" }
androidx-ktx = { module = "androidx.core:core-ktx", version = "1.0.2" }
animalSniffer-annotations = { module = "org.codehaus.mojo:animal-sniffer-annotations", version.ref = "animalSniffer" }
animalSniffer-gradle = { module = "ru.vyarus:gradle-animalsniffer-plugin", version.ref = "animalSnifferGradle" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
contour = { module = "app.cash.contour:contour", version = "1.1.0" }
dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
dokka-gradlePlugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }
jimfs = { module = "com.google.jimfs:jimfs", version.ref = "jimfs" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
junit = { module = "junit:junit", version.ref = "junit" }
kaml = { module = "com.charleskorn.kaml:kaml", version = "0.20.0" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version = "1.0.1" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test-annotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common" }
kotlin-test-js = { module = "org.jetbrains.kotlin:kotlin-test-js" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
misk = { module = "com.squareup.misk:misk", version = "0.11.0" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp-core = { module = "com.squareup.okhttp3:okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver" }
okio-bom = { module = "com.squareup.okio:okio-bom", version.ref = "okio" }
okio-core = { module = "com.squareup.okio:okio" }
okio-fakefilesystem = { module = "com.squareup.okio:okio-fakefilesystem" }
# `plugins` is a keyword in version catalogs.
# Check https://docs.gradle.org/current/userguide/platforms.html#sec:version-catalog-plugin
#  if we ever wanna migrate to this.
pluginz-android = { module = "com.android.tools.build:gradle", version = "7.1.2" }
pluginz-japicmp = { module = "me.champeau.gradle:japicmp-gradle-plugin", version = "0.3.1" }
pluginz-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
pluginz-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
pluginz-shadow = { module = "com.github.jengelman.gradle.plugins:shadow", version = "4.0.1" }
pluginz-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version = "6.3.0" }
protobuf-gradlePlugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobufGradlePlugin" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-javaUtil = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
swiftpoet = { module = "io.outfoxx:swiftpoet", version = "1.3.1" }
truth = { module = "com.google.truth:truth", version = "1.1.3" }
vanniktechPublishPlugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version = "0.20.0" }
wire-compiler = { module = "com.squareup.wire:wire-compiler" }
wire-gradlePlugin = { module = "com.squareup.wire:wire-gradle-plugin" }
wire-grpcClient = { module = "com.squareup.wire:wire-grpc-client" }
wire-grpcMockWebServer = { module = "com.squareup.wire:wire-grpc-mockwebserver" }
wire-grpcServer = { module = "com.squareup.wire:wire-grpc-server" }
wire-gsonSupport = { module = "com.squareup.wire:wire-gson-support" }
wire-javaGenerator = { module = "com.squareup.wire:wire-java-generator" }
wire-kotlinGenerator = { module = "com.squareup.wire:wire-kotlin-generator" }
wire-moshiAdapter = { module = "com.squareup.wire:wire-moshi-adapter" }
wire-runtime = { module = "com.squareup.wire:wire-runtime" }
wire-schema = { module = "com.squareup.wire:wire-schema" }
wire-schemaHandlerTests = { module = "com.squareup.wire:wire-schema-tests" }
wire-testUtils = { module = "com.squareup.wire:wire-test-utils" }
