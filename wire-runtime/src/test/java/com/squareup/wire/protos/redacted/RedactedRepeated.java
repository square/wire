// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/redacted_test.proto at 47:1
package com.squareup.wire.protos.redacted;

import com.google.protobuf.FieldOptions;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Collections;
import java.util.List;

public final class RedactedRepeated extends Message<RedactedRepeated> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<RedactedRepeated> ADAPTER = new TypeAdapter.MessageAdapter<RedactedRepeated>() {
    @Override
    public RedactedRepeated read(ProtoReader reader) throws IOException {
      return RedactedRepeated.read(reader);
    }
  };

  public static final FieldOptions FIELD_OPTIONS_A = new FieldOptions.Builder()
      .setExtension(Ext_redacted_test.redacted, true)
      .build();

  public final List<String> a;

  public RedactedRepeated(List<String> a) {
    super("RedactedRepeated");
    this.a = immutableCopyOf(a);
  }

  private RedactedRepeated(Builder builder) {
    this(builder.a);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.repeated(1, "a", a, TypeAdapter.STRING, true);
    visitor.unknowns(this);
  }

  public static RedactedRepeated read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.a = repeated(builder.a, reader.value(TypeAdapter.STRING)); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<RedactedRepeated> {
    public List<String> a = Collections.emptyList();

    public Builder() {
    }

    public Builder(RedactedRepeated message) {
      super(message);
      if (message == null) return;
      this.a = copyOf(message.a);
    }

    public Builder a(List<String> a) {
      this.a = canonicalizeList(a);
      return this;
    }

    @Override
    public RedactedRepeated build() {
      return new RedactedRepeated(this);
    }
  }
}
