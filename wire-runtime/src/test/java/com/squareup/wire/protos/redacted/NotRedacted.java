// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/redacted_test.proto at 22:1
package com.squareup.wire.protos.redacted;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.TagMap;
import com.squareup.wire.WireField;
import java.io.ObjectStreamException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public final class NotRedacted extends Message<NotRedacted> {
  public static final ProtoAdapter<NotRedacted> ADAPTER = ProtoAdapter.newMessageAdapter(NotRedacted.class);

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_A = "";

  public static final String DEFAULT_B = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String a;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String b;

  public NotRedacted(String a, String b) {
    this(a, b, null);
  }

  public NotRedacted(String a, String b, TagMap tagMap) {
    super(tagMap);
    this.a = a;
    this.b = b;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NotRedacted)) return false;
    NotRedacted o = (NotRedacted) other;
    return equals(tagMap(), o.tagMap())
        && equals(a, o.a)
        && equals(b, o.b);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = tagMap() != null ? tagMap().hashCode() : 0;
      result = result * 37 + (a != null ? a.hashCode() : 0);
      result = result * 37 + (b != null ? b.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  private Object writeReplace() throws ObjectStreamException {
    return super.createSerializedForm();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<NotRedacted, Builder> {
    public String a;

    public String b;

    public Builder() {
    }

    public Builder(NotRedacted message) {
      super(message);
      if (message == null) return;
      this.a = message.a;
      this.b = message.b;
    }

    public Builder a(String a) {
      this.a = a;
      return this;
    }

    public Builder b(String b) {
      this.b = b;
      return this;
    }

    @Override
    public NotRedacted build() {
      return new NotRedacted(a, b, buildTagMap());
    }
  }
}
