// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/unknown_fields.proto at 24:1
package com.squareup.wire.protos.unknownfields;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Collections;
import java.util.List;

public final class VersionTwo extends Message<VersionTwo> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<VersionTwo> ADAPTER = new TypeAdapter.MessageAdapter<VersionTwo>() {
    @Override
    public VersionTwo read(ProtoReader reader) throws IOException {
      return VersionTwo.read(reader);
    }
  };

  public static final Integer DEFAULT_I = 0;

  public static final Integer DEFAULT_V2_I = 0;

  public static final String DEFAULT_V2_S = "";

  public static final Integer DEFAULT_V2_F32 = 0;

  public static final Long DEFAULT_V2_F64 = 0L;

  public final Integer i;

  public final Integer v2_i;

  public final String v2_s;

  public final Integer v2_f32;

  public final Long v2_f64;

  public final List<String> v2_rs;

  public VersionTwo(Integer i, Integer v2_i, String v2_s, Integer v2_f32, Long v2_f64, List<String> v2_rs) {
    super("VersionTwo");
    this.i = i;
    this.v2_i = v2_i;
    this.v2_s = v2_s;
    this.v2_f32 = v2_f32;
    this.v2_f64 = v2_f64;
    this.v2_rs = immutableCopyOf(v2_rs);
  }

  private VersionTwo(Builder builder) {
    this(builder.i, builder.v2_i, builder.v2_s, builder.v2_f32, builder.v2_f64, builder.v2_rs);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "i", i, TypeAdapter.INT32, false);
    visitor.value(2, "v2_i", v2_i, TypeAdapter.INT32, false);
    visitor.value(3, "v2_s", v2_s, TypeAdapter.STRING, false);
    visitor.value(4, "v2_f32", v2_f32, TypeAdapter.FIXED32, false);
    visitor.value(5, "v2_f64", v2_f64, TypeAdapter.FIXED64, false);
    visitor.repeated(6, "v2_rs", v2_rs, TypeAdapter.STRING, false);
    visitor.unknowns(this);
  }

  public static VersionTwo read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.i = reader.value(TypeAdapter.INT32); break;
        case 2: builder.v2_i = reader.value(TypeAdapter.INT32); break;
        case 3: builder.v2_s = reader.value(TypeAdapter.STRING); break;
        case 4: builder.v2_f32 = reader.value(TypeAdapter.FIXED32); break;
        case 5: builder.v2_f64 = reader.value(TypeAdapter.FIXED64); break;
        case 6: builder.v2_rs = repeated(builder.v2_rs, reader.value(TypeAdapter.STRING)); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<VersionTwo> {
    public Integer i;

    public Integer v2_i;

    public String v2_s;

    public Integer v2_f32;

    public Long v2_f64;

    public List<String> v2_rs = Collections.emptyList();

    public Builder() {
    }

    public Builder(VersionTwo message) {
      super(message);
      if (message == null) return;
      this.i = message.i;
      this.v2_i = message.v2_i;
      this.v2_s = message.v2_s;
      this.v2_f32 = message.v2_f32;
      this.v2_f64 = message.v2_f64;
      this.v2_rs = copyOf(message.v2_rs);
    }

    public Builder i(Integer i) {
      this.i = i;
      return this;
    }

    public Builder v2_i(Integer v2_i) {
      this.v2_i = v2_i;
      return this;
    }

    public Builder v2_s(String v2_s) {
      this.v2_s = v2_s;
      return this;
    }

    public Builder v2_f32(Integer v2_f32) {
      this.v2_f32 = v2_f32;
      return this;
    }

    public Builder v2_f64(Long v2_f64) {
      this.v2_f64 = v2_f64;
      return this;
    }

    public Builder v2_rs(List<String> v2_rs) {
      this.v2_rs = canonicalizeList(v2_rs);
      return this;
    }

    @Override
    public VersionTwo build() {
      return new VersionTwo(this);
    }
  }
}
