// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/samebasename/single_level.proto at 24:1
package com.squareup.wire.protos.single_level;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;
import java.util.Collections;
import java.util.List;

public final class Bars extends Message<Bars> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<Bars> ADAPTER = new TypeAdapter.MessageAdapter<Bars>() {
    @Override
    public Bars read(ProtoReader reader) throws IOException {
      return Bars.read(reader);
    }
  };

  public final List<Bar> bars;

  public Bars(List<Bar> bars) {
    super("Bars");
    this.bars = immutableCopyOf(bars);
  }

  private Bars(Builder builder) {
    this(builder.bars);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.repeated(1, "bars", bars, Bar.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static Bars read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.bars = repeatedMessage(builder.bars, reader, Bar.ADAPTER); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Bars> {
    public List<Bar> bars = Collections.emptyList();

    public Builder() {
    }

    public Builder(Bars message) {
      super(message);
      if (message == null) return;
      this.bars = copyOf(message.bars);
    }

    public Builder bars(List<Bar> bars) {
      this.bars = canonicalizeList(bars);
      return this;
    }

    @Override
    public Bars build() {
      return new Bars(this);
    }
  }
}
