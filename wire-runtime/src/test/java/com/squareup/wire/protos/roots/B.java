// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/roots.proto at 39:1
package com.squareup.wire.protos.roots;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;

public final class B extends Message<B> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<B> ADAPTER = new TypeAdapter.MessageAdapter<B>() {
    @Override
    public B read(ProtoReader reader) throws IOException {
      return B.read(reader);
    }
  };

  public final C c;

  public B(C c) {
    super("B");
    this.c = c;
  }

  private B(Builder builder) {
    this(builder.c);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "c", c, C.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static B read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.c = message(reader, C.ADAPTER); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<B> {
    public C c;

    public Builder() {
    }

    public Builder(B message) {
      super(message);
      if (message == null) return;
      this.c = message.c;
    }

    public Builder c(C c) {
      this.c = c;
      return this;
    }

    @Override
    public B build() {
      if (c == null) {
        throw missingRequiredFields(c, "c");
      }
      return new B(this);
    }
  }
}
