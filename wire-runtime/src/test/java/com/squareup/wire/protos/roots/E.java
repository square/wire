// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/roots.proto at 51:1
package com.squareup.wire.protos.roots;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;

public final class E extends Message<E> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<E> ADAPTER = new TypeAdapter.MessageAdapter<E>() {
    @Override
    public E read(ProtoReader reader) throws IOException {
      return E.read(reader);
    }
  };

  public static final G DEFAULT_G = G.FOO;

  public final F f;

  public final G g;

  public E(F f, G g) {
    super("E");
    this.f = f;
    this.g = g;
  }

  private E(Builder builder) {
    this(builder.f, builder.g);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "f", f, F.ADAPTER, false);
    visitor.value(2, "g", g, G.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static E read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.f = message(reader, F.ADAPTER); break;
        case 2: builder.g = enumOrUnknown(2, reader, G.ADAPTER, builder); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<E> {
    public F f;

    public G g;

    public Builder() {
    }

    public Builder(E message) {
      super(message);
      if (message == null) return;
      this.f = message.f;
      this.g = message.g;
    }

    public Builder f(F f) {
      this.f = f;
      return this;
    }

    public Builder g(G g) {
      this.g = g;
      return this;
    }

    @Override
    public E build() {
      return new E(this);
    }
  }

  public static final class F extends Message<F> {
    private static final long serialVersionUID = 0L;

    public static final TypeAdapter<F> ADAPTER = new TypeAdapter.MessageAdapter<F>() {
      @Override
      public F read(ProtoReader reader) throws IOException {
        return F.read(reader);
      }
    };

    public static final Integer DEFAULT_I = 0;

    public final Integer i;

    public F(Integer i) {
      super("F");
      this.i = i;
    }

    private F(Builder builder) {
      this(builder.i);
      setBuilder(builder);
    }

    @Override
    protected void visitFields(Message.Visitor visitor) {
      visitor.value(1, "i", i, TypeAdapter.INT32, false);
      visitor.unknowns(this);
    }

    public static F read(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      while (reader.hasNext()) {
        int tag = reader.nextTag();
        switch (tag) {
          case 1: builder.i = reader.value(TypeAdapter.INT32); break;
          default: builder.readUnknown(tag, reader); break;
        }
      }
      return builder.build();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<F> {
      public Integer i;

      public Builder() {
      }

      public Builder(F message) {
        super(message);
        if (message == null) return;
        this.i = message.i;
      }

      public Builder i(Integer i) {
        this.i = i;
        return this;
      }

      @Override
      public F build() {
        return new F(this);
      }
    }
  }
}
