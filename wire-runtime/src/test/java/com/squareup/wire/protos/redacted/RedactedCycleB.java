// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/redacted_test.proto at 43:1
package com.squareup.wire.protos.redacted;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;

public final class RedactedCycleB extends Message<RedactedCycleB> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<RedactedCycleB> ADAPTER = new TypeAdapter.MessageAdapter<RedactedCycleB>() {
    @Override
    public RedactedCycleB read(ProtoReader reader) throws IOException {
      return RedactedCycleB.read(reader);
    }
  };

  public final RedactedCycleA a;

  public RedactedCycleB(RedactedCycleA a) {
    super("RedactedCycleB");
    this.a = a;
  }

  private RedactedCycleB(Builder builder) {
    this(builder.a);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "a", a, RedactedCycleA.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static RedactedCycleB read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.a = message(reader, RedactedCycleA.ADAPTER); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<RedactedCycleB> {
    public RedactedCycleA a;

    public Builder() {
    }

    public Builder(RedactedCycleB message) {
      super(message);
      if (message == null) return;
      this.a = message.a;
    }

    public Builder a(RedactedCycleA a) {
      this.a = a;
      return this;
    }

    @Override
    public RedactedCycleB build() {
      return new RedactedCycleB(this);
    }
  }
}
