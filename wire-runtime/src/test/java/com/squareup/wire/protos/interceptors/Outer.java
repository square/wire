// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/interceptors.proto
package com.squareup.wire.protos.interceptors;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class Outer extends Message {

  public static final List<Encrypted> DEFAULT_ENCRYPTED = Collections.emptyList();

  @ProtoField(tag = 1)
  public final Plaintext plaintext;

  @ProtoField(tag = 2)
  public final Unencrypted unencrypted;

  @ProtoField(tag = 3, label = REPEATED)
  public final List<Encrypted> encrypted;

  @ProtoField(tag = 4)
  public final EncryptedField encrypted_field;

  public Outer(Plaintext plaintext, Unencrypted unencrypted, List<Encrypted> encrypted, EncryptedField encrypted_field) {
    this.plaintext = plaintext;
    this.unencrypted = unencrypted;
    this.encrypted = immutableCopyOf(encrypted);
    this.encrypted_field = encrypted_field;
  }

  private Outer(Builder builder) {
    this(builder.plaintext, builder.unencrypted, builder.encrypted, builder.encrypted_field);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Outer)) return false;
    Outer o = (Outer) other;
    return equals(plaintext, o.plaintext)
        && equals(unencrypted, o.unencrypted)
        && equals(encrypted, o.encrypted)
        && equals(encrypted_field, o.encrypted_field);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = plaintext != null ? plaintext.hashCode() : 0;
      result = result * 37 + (unencrypted != null ? unencrypted.hashCode() : 0);
      result = result * 37 + (encrypted != null ? encrypted.hashCode() : 1);
      result = result * 37 + (encrypted_field != null ? encrypted_field.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Outer> {

    public Plaintext plaintext;
    public Unencrypted unencrypted;
    public List<Encrypted> encrypted;
    public EncryptedField encrypted_field;

    public Builder() {
    }

    public Builder(Outer message) {
      super(message);
      if (message == null) return;
      this.plaintext = message.plaintext;
      this.unencrypted = message.unencrypted;
      this.encrypted = copyOf(message.encrypted);
      this.encrypted_field = message.encrypted_field;
    }

    public Builder plaintext(Plaintext plaintext) {
      this.plaintext = plaintext;
      return this;
    }

    public Builder unencrypted(Unencrypted unencrypted) {
      this.unencrypted = unencrypted;
      return this;
    }

    public Builder encrypted(List<Encrypted> encrypted) {
      this.encrypted = checkForNulls(encrypted);
      return this;
    }

    public Builder encrypted_field(EncryptedField encrypted_field) {
      this.encrypted_field = encrypted_field;
      return this;
    }

    @Override
    public Outer build() {
      return new Outer(this);
    }
  }
}
