// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/one_of.proto at 20:1
package com.squareup.wire.protos.oneof;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;

public final class OneOfMessage extends Message<OneOfMessage> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<OneOfMessage> ADAPTER = new TypeAdapter.MessageAdapter<OneOfMessage>() {
    @Override
    public OneOfMessage read(ProtoReader reader) throws IOException {
      return OneOfMessage.read(reader);
    }
  };

  public static final Integer DEFAULT_FOO = 0;

  public static final String DEFAULT_BAR = "";

  /**
   * What foo.
   */
  public final Integer foo;

  /**
   * Such bar.
   */
  public final String bar;

  public OneOfMessage(Integer foo, String bar) {
    super("OneOfMessage");
    this.foo = foo;
    this.bar = bar;
  }

  private OneOfMessage(Builder builder) {
    this(builder.foo, builder.bar);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "foo", foo, TypeAdapter.INT32, false);
    visitor.value(3, "bar", bar, TypeAdapter.STRING, false);
    visitor.unknowns(this);
  }

  public static OneOfMessage read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.foo = reader.value(TypeAdapter.INT32); break;
        case 3: builder.bar = reader.value(TypeAdapter.STRING); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<OneOfMessage> {
    public Integer foo;

    public String bar;

    public Builder() {
    }

    public Builder(OneOfMessage message) {
      super(message);
      if (message == null) return;
      this.foo = message.foo;
      this.bar = message.bar;
    }

    /**
     * What foo.
     */
    public Builder foo(Integer foo) {
      this.foo = foo;
      this.bar = null;
      return this;
    }

    /**
     * Such bar.
     */
    public Builder bar(String bar) {
      this.bar = bar;
      this.foo = null;
      return this;
    }

    @Override
    public OneOfMessage build() {
      return new OneOfMessage(this);
    }
  }
}
