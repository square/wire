// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/redacted_test.proto at 27:1
package com.squareup.wire.protos.redacted;

import com.google.protobuf.FieldOptions;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;

public final class Redacted extends Message<Redacted> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<Redacted> ADAPTER = new TypeAdapter.MessageAdapter<Redacted>() {
    @Override
    public Redacted read(ProtoReader reader) throws IOException {
      return Redacted.read(reader);
    }
  };

  public static final FieldOptions FIELD_OPTIONS_A = new FieldOptions.Builder()
      .setExtension(Ext_redacted_test.redacted, true)
      .build();

  public static final FieldOptions FIELD_OPTIONS_B = new FieldOptions.Builder()
      .setExtension(Ext_redacted_test.redacted, false)
      .build();

  public static final String DEFAULT_A = "";

  public static final String DEFAULT_B = "";

  public static final String DEFAULT_C = "";

  public final String a;

  public final String b;

  public final String c;

  public Redacted(String a, String b, String c) {
    super("Redacted");
    this.a = a;
    this.b = b;
    this.c = c;
  }

  private Redacted(Builder builder) {
    this(builder.a, builder.b, builder.c);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "a", a, TypeAdapter.STRING, true);
    visitor.value(2, "b", b, TypeAdapter.STRING, false);
    visitor.value(3, "c", c, TypeAdapter.STRING, false);
    visitor.unknowns(this);
  }

  public static Redacted read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.a = reader.value(TypeAdapter.STRING); break;
        case 2: builder.b = reader.value(TypeAdapter.STRING); break;
        case 3: builder.c = reader.value(TypeAdapter.STRING); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Redacted> {
    public String a;

    public String b;

    public String c;

    public Builder() {
    }

    public Builder(Redacted message) {
      super(message);
      if (message == null) return;
      this.a = message.a;
      this.b = message.b;
      this.c = message.c;
    }

    public Builder a(String a) {
      this.a = a;
      return this;
    }

    public Builder b(String b) {
      this.b = b;
      return this;
    }

    public Builder c(String c) {
      this.c = c;
      return this;
    }

    @Override
    public Redacted build() {
      return new Redacted(this);
    }
  }
}
