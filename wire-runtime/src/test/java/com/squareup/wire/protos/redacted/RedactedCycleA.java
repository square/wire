// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/redacted_test.proto at 39:1
package com.squareup.wire.protos.redacted;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;

public final class RedactedCycleA extends Message<RedactedCycleA> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<RedactedCycleA> ADAPTER = new TypeAdapter.MessageAdapter<RedactedCycleA>() {
    @Override
    public RedactedCycleA read(ProtoReader reader) throws IOException {
      return RedactedCycleA.read(reader);
    }
  };

  public final RedactedCycleB b;

  public RedactedCycleA(RedactedCycleB b) {
    super("RedactedCycleA");
    this.b = b;
  }

  private RedactedCycleA(Builder builder) {
    this(builder.b);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "b", b, RedactedCycleB.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static RedactedCycleA read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.b = message(reader, RedactedCycleB.ADAPTER); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<RedactedCycleA> {
    public RedactedCycleB b;

    public Builder() {
    }

    public Builder(RedactedCycleA message) {
      super(message);
      if (message == null) return;
      this.b = message.b;
    }

    public Builder b(RedactedCycleB b) {
      this.b = b;
      return this;
    }

    @Override
    public RedactedCycleA build() {
      return new RedactedCycleA(this);
    }
  }
}
