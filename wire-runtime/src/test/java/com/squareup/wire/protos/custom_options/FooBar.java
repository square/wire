// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/custom_options.proto at 23:1
package com.squareup.wire.protos.custom_options;

import com.google.protobuf.EnumOptions;
import com.google.protobuf.FieldOptions;
import com.squareup.wire.ExtendableMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import com.squareup.wire.WireEnum;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Float;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public final class FooBar extends ExtendableMessage<FooBar> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<FooBar> ADAPTER = new TypeAdapter.MessageAdapter<FooBar>() {
    @Override
    public FooBar read(ProtoReader reader) throws IOException {
      return FooBar.read(reader);
    }
  };

  public static final FieldOptions FIELD_OPTIONS_FOO = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_one, 17)
      .build();

  public static final FieldOptions FIELD_OPTIONS_BAR = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_two, 33.5f)
      .build();

  public static final FieldOptions FIELD_OPTIONS_BAZ = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_three, FooBarBazEnum.BAR)
      .build();

  public static final FieldOptions FIELD_OPTIONS_QUX = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_one, 18)
      .setExtension(Ext_custom_options.my_field_option_two, 34.5f)
      .build();

  public static final FieldOptions FIELD_OPTIONS_FRED = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_four, new FooBar.Builder()
          .foo(11)
          .bar("22")
          .baz(new Nested.Builder()
              .value(FooBarBazEnum.BAR)
              .build())
          .fred(Arrays.asList(
              444.0f,
              555.0f))
          .nested(Arrays.asList(
              new FooBar.Builder()
                  .foo(33)
                  .fred(Arrays.asList(
                      100.0f,
                      200.0f))
                  .build()))
          .build())
      .setExtension(Ext_custom_options.my_field_option_two, 99.9f)
      .build();

  public static final FieldOptions FIELD_OPTIONS_DAISY = new FieldOptions.Builder()
      .setExtension(Ext_custom_options.my_field_option_four, new FooBar.Builder()
          .baz(new Nested.Builder()
              .value(FooBarBazEnum.FOO)
              .build())
          .build())
      .build();

  public static final Integer DEFAULT_FOO = 0;

  public static final String DEFAULT_BAR = "";

  public static final Long DEFAULT_QUX = 0L;

  public static final Double DEFAULT_DAISY = 0.0d;

  public final Integer foo;

  public final String bar;

  public final Nested baz;

  public final Long qux;

  public final List<Float> fred;

  public final Double daisy;

  public final List<FooBar> nested;

  public FooBar(Integer foo, String bar, Nested baz, Long qux, List<Float> fred, Double daisy, List<FooBar> nested) {
    super("FooBar");
    this.foo = foo;
    this.bar = bar;
    this.baz = baz;
    this.qux = qux;
    this.fred = immutableCopyOf(fred);
    this.daisy = daisy;
    this.nested = immutableCopyOf(nested);
  }

  private FooBar(Builder builder) {
    this(builder.foo, builder.bar, builder.baz, builder.qux, builder.fred, builder.daisy, builder.nested);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "foo", foo, TypeAdapter.INT32, false);
    visitor.value(2, "bar", bar, TypeAdapter.STRING, false);
    visitor.value(3, "baz", baz, Nested.ADAPTER, false);
    visitor.value(4, "qux", qux, TypeAdapter.UINT64, false);
    visitor.repeated(5, "fred", fred, TypeAdapter.FLOAT, false);
    visitor.value(6, "daisy", daisy, TypeAdapter.DOUBLE, false);
    visitor.repeated(7, "nested", nested, FooBar.ADAPTER, false);
    visitor.extensions(this);
    visitor.unknowns(this);
  }

  public static FooBar read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.foo = reader.value(TypeAdapter.INT32); break;
        case 2: builder.bar = reader.value(TypeAdapter.STRING); break;
        case 3: builder.baz = message(reader, Nested.ADAPTER); break;
        case 4: builder.qux = reader.value(TypeAdapter.UINT64); break;
        case 5: builder.fred = repeated(builder.fred, reader.value(TypeAdapter.FLOAT)); break;
        case 6: builder.daisy = reader.value(TypeAdapter.DOUBLE); break;
        case 7: builder.nested = repeatedMessage(builder.nested, reader, FooBar.ADAPTER); break;
        default: builder.readExtensionOrUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends ExtendableMessage.ExtendableBuilder<FooBar, Builder> {
    public Integer foo;

    public String bar;

    public Nested baz;

    public Long qux;

    public List<Float> fred = Collections.emptyList();

    public Double daisy;

    public List<FooBar> nested = Collections.emptyList();

    public Builder() {
      super(FooBar.class, Builder.class);
    }

    public Builder(FooBar message) {
      super(FooBar.class, Builder.class, message);
      if (message == null) return;
      this.foo = message.foo;
      this.bar = message.bar;
      this.baz = message.baz;
      this.qux = message.qux;
      this.fred = copyOf(message.fred);
      this.daisy = message.daisy;
      this.nested = copyOf(message.nested);
    }

    public Builder foo(Integer foo) {
      this.foo = foo;
      return this;
    }

    public Builder bar(String bar) {
      this.bar = bar;
      return this;
    }

    public Builder baz(Nested baz) {
      this.baz = baz;
      return this;
    }

    public Builder qux(Long qux) {
      this.qux = qux;
      return this;
    }

    public Builder fred(List<Float> fred) {
      this.fred = canonicalizeList(fred);
      return this;
    }

    public Builder daisy(Double daisy) {
      this.daisy = daisy;
      return this;
    }

    public Builder nested(List<FooBar> nested) {
      this.nested = canonicalizeList(nested);
      return this;
    }

    @Override
    public FooBar build() {
      return new FooBar(this);
    }
  }

  public static final class Nested extends Message<Nested> {
    private static final long serialVersionUID = 0L;

    public static final TypeAdapter<Nested> ADAPTER = new TypeAdapter.MessageAdapter<Nested>() {
      @Override
      public Nested read(ProtoReader reader) throws IOException {
        return Nested.read(reader);
      }
    };

    public static final FooBarBazEnum DEFAULT_VALUE = FooBarBazEnum.FOO;

    public final FooBarBazEnum value;

    public Nested(FooBarBazEnum value) {
      super("Nested");
      this.value = value;
    }

    private Nested(Builder builder) {
      this(builder.value);
      setBuilder(builder);
    }

    @Override
    protected void visitFields(Message.Visitor visitor) {
      visitor.value(1, "value", value, FooBarBazEnum.ADAPTER, false);
      visitor.unknowns(this);
    }

    public static Nested read(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      while (reader.hasNext()) {
        int tag = reader.nextTag();
        switch (tag) {
          case 1: builder.value = enumOrUnknown(1, reader, FooBarBazEnum.ADAPTER, builder); break;
          default: builder.readUnknown(tag, reader); break;
        }
      }
      return builder.build();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<Nested> {
      public FooBarBazEnum value;

      public Builder() {
      }

      public Builder(Nested message) {
        super(message);
        if (message == null) return;
        this.value = message.value;
      }

      public Builder value(FooBarBazEnum value) {
        this.value = value;
        return this;
      }

      @Override
      public Nested build() {
        return new Nested(this);
      }
    }
  }

  public static final class More extends Message<More> {
    private static final long serialVersionUID = 0L;

    public static final TypeAdapter<More> ADAPTER = new TypeAdapter.MessageAdapter<More>() {
      @Override
      public More read(ProtoReader reader) throws IOException {
        return More.read(reader);
      }
    };

    public final List<Integer> serial;

    public More(List<Integer> serial) {
      super("More");
      this.serial = immutableCopyOf(serial);
    }

    private More(Builder builder) {
      this(builder.serial);
      setBuilder(builder);
    }

    @Override
    protected void visitFields(Message.Visitor visitor) {
      visitor.repeated(1, "serial", serial, TypeAdapter.INT32, false);
      visitor.unknowns(this);
    }

    public static More read(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      while (reader.hasNext()) {
        int tag = reader.nextTag();
        switch (tag) {
          case 1: builder.serial = repeated(builder.serial, reader.value(TypeAdapter.INT32)); break;
          default: builder.readUnknown(tag, reader); break;
        }
      }
      return builder.build();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<More> {
      public List<Integer> serial = Collections.emptyList();

      public Builder() {
      }

      public Builder(More message) {
        super(message);
        if (message == null) return;
        this.serial = copyOf(message.serial);
      }

      public Builder serial(List<Integer> serial) {
        this.serial = canonicalizeList(serial);
        return this;
      }

      @Override
      public More build() {
        return new More(this);
      }
    }
  }

  public enum FooBarBazEnum implements WireEnum {
    FOO(1, 17, new More.Builder()
        .serial(Arrays.asList(
            99,
            199))
        .build(), null),

    BAR(2, null, null, true),

    BAZ(3, 18, null, false);

    public static final TypeAdapter.EnumAdapter<FooBarBazEnum> ADAPTER = new TypeAdapter.EnumAdapter<FooBarBazEnum>() {
      @Override
      public FooBarBazEnum fromValue(int value) {
        return FooBarBazEnum.fromValue(value);
      }
    };

    public static final EnumOptions ENUM_OPTIONS = new EnumOptions.Builder()
        .setExtension(Ext_custom_options.enum_option, true)
        .build();

    private final int value;

    public final Integer enum_value_option;

    public final More complex_enum_value_option;

    public final Boolean foreign_enum_value_option;

    FooBarBazEnum(int value, Integer enum_value_option, More complex_enum_value_option, Boolean foreign_enum_value_option) {
      this.value = value;
      this.enum_value_option = enum_value_option;
      this.complex_enum_value_option = complex_enum_value_option;
      this.foreign_enum_value_option = foreign_enum_value_option;
    }

    @Override
    public int value() {
      return value;
    }

    public static FooBarBazEnum fromValue(int value) {
      switch (value) {
        case 1: return FOO;
        case 2: return BAR;
        case 3: return BAZ;
        default: return null;
      }
    }
  }
}
