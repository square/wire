// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/edge_cases.proto at 23:1
package com.squareup.wire.protos.edgecases;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;

public final class OneField extends Message<OneField> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<OneField> ADAPTER = new TypeAdapter.MessageAdapter<OneField>() {
    @Override
    public OneField read(ProtoReader reader) throws IOException {
      return OneField.read(reader);
    }
  };

  public static final Integer DEFAULT_OPT_INT32 = 0;

  public final Integer opt_int32;

  public OneField(Integer opt_int32) {
    super("OneField");
    this.opt_int32 = opt_int32;
  }

  private OneField(Builder builder) {
    this(builder.opt_int32);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "opt_int32", opt_int32, TypeAdapter.INT32, false);
    visitor.unknowns(this);
  }

  public static OneField read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.opt_int32 = reader.value(TypeAdapter.INT32); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<OneField> {
    public Integer opt_int32;

    public Builder() {
    }

    public Builder(OneField message) {
      super(message);
      if (message == null) return;
      this.opt_int32 = message.opt_int32;
    }

    public Builder opt_int32(Integer opt_int32) {
      this.opt_int32 = opt_int32;
      return this;
    }

    @Override
    public OneField build() {
      return new OneField(this);
    }
  }
}
