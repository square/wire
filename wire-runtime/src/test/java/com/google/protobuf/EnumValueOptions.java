// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/google/protobuf/descriptor.proto at 389:1
package com.google.protobuf;

import com.squareup.wire.ExtendableMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;
import java.util.Collections;
import java.util.List;

public final class EnumValueOptions extends ExtendableMessage<EnumValueOptions> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<EnumValueOptions> ADAPTER = new TypeAdapter.MessageAdapter<EnumValueOptions>() {
    @Override
    public EnumValueOptions read(ProtoReader reader) throws IOException {
      return EnumValueOptions.read(reader);
    }
  };

  /**
   * The parser stores options it doesn't recognize here. See above.
   */
  public final List<UninterpretedOption> uninterpreted_option;

  public EnumValueOptions(List<UninterpretedOption> uninterpreted_option) {
    super("EnumValueOptions");
    this.uninterpreted_option = immutableCopyOf(uninterpreted_option);
  }

  private EnumValueOptions(Builder builder) {
    this(builder.uninterpreted_option);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.repeated(999, "uninterpreted_option", uninterpreted_option, UninterpretedOption.ADAPTER, false);
    visitor.extensions(this);
    visitor.unknowns(this);
  }

  public static EnumValueOptions read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 999: builder.uninterpreted_option = repeatedMessage(builder.uninterpreted_option, reader, UninterpretedOption.ADAPTER); break;
        default: builder.readExtensionOrUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends ExtendableMessage.ExtendableBuilder<EnumValueOptions, Builder> {
    public List<UninterpretedOption> uninterpreted_option = Collections.emptyList();

    public Builder() {
      super(EnumValueOptions.class, Builder.class);
    }

    public Builder(EnumValueOptions message) {
      super(EnumValueOptions.class, Builder.class, message);
      if (message == null) return;
      this.uninterpreted_option = copyOf(message.uninterpreted_option);
    }

    /**
     * The parser stores options it doesn't recognize here. See above.
     */
    public Builder uninterpreted_option(List<UninterpretedOption> uninterpreted_option) {
      this.uninterpreted_option = canonicalizeList(uninterpreted_option);
      return this;
    }

    @Override
    public EnumValueOptions build() {
      return new EnumValueOptions(this);
    }
  }
}
