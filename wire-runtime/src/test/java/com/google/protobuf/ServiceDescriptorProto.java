// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/google/protobuf/descriptor.proto at 187:1
package com.google.protobuf;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.TypeAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Collections;
import java.util.List;

/**
 * Describes a service.
 */
public final class ServiceDescriptorProto extends Message<ServiceDescriptorProto> {
  private static final long serialVersionUID = 0L;

  public static final TypeAdapter<ServiceDescriptorProto> ADAPTER = new TypeAdapter.MessageAdapter<ServiceDescriptorProto>() {
    @Override
    public ServiceDescriptorProto read(ProtoReader reader) throws IOException {
      return ServiceDescriptorProto.read(reader);
    }
  };

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_DOC = "";

  public final String name;

  public final List<MethodDescriptorProto> method;

  /**
   * Doc string for generated code.
   */
  public final String doc;

  public final ServiceOptions options;

  public ServiceDescriptorProto(String name, List<MethodDescriptorProto> method, String doc, ServiceOptions options) {
    super("ServiceDescriptorProto");
    this.name = name;
    this.method = immutableCopyOf(method);
    this.doc = doc;
    this.options = options;
  }

  private ServiceDescriptorProto(Builder builder) {
    this(builder.name, builder.method, builder.doc, builder.options);
    setBuilder(builder);
  }

  @Override
  protected void visitFields(Message.Visitor visitor) {
    visitor.value(1, "name", name, TypeAdapter.STRING, false);
    visitor.repeated(2, "method", method, MethodDescriptorProto.ADAPTER, false);
    visitor.value(4, "doc", doc, TypeAdapter.STRING, false);
    visitor.value(3, "options", options, ServiceOptions.ADAPTER, false);
    visitor.unknowns(this);
  }

  public static ServiceDescriptorProto read(ProtoReader reader) throws IOException {
    Builder builder = new Builder();
    while (reader.hasNext()) {
      int tag = reader.nextTag();
      switch (tag) {
        case 1: builder.name = reader.value(TypeAdapter.STRING); break;
        case 2: builder.method = repeatedMessage(builder.method, reader, MethodDescriptorProto.ADAPTER); break;
        case 4: builder.doc = reader.value(TypeAdapter.STRING); break;
        case 3: builder.options = message(reader, ServiceOptions.ADAPTER); break;
        default: builder.readUnknown(tag, reader); break;
      }
    }
    return builder.build();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<ServiceDescriptorProto> {
    public String name;

    public List<MethodDescriptorProto> method = Collections.emptyList();

    public String doc;

    public ServiceOptions options;

    public Builder() {
    }

    public Builder(ServiceDescriptorProto message) {
      super(message);
      if (message == null) return;
      this.name = message.name;
      this.method = copyOf(message.method);
      this.doc = message.doc;
      this.options = message.options;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder method(List<MethodDescriptorProto> method) {
      this.method = canonicalizeList(method);
      return this;
    }

    /**
     * Doc string for generated code.
     */
    public Builder doc(String doc) {
      this.doc = doc;
      return this;
    }

    public Builder options(ServiceOptions options) {
      this.options = options;
      return this;
    }

    @Override
    public ServiceDescriptorProto build() {
      return new ServiceDescriptorProto(this);
    }
  }
}
