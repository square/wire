apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
  jvm {
    withJava()
  }
  js {
    configure([compilations.main, compilations.test]) {
      tasks.getByName(compileKotlinTaskName).kotlinOptions {
        moduleKind = 'umd'
        sourceMap = true
        metaInfo = true
      }
    }
    nodejs()
    browser()
  }
  iosX64()
  iosArm64()
  // Required to generate tests tasks: https://youtrack.jetbrains.com/issue/KT-26547
  linuxX64()
  macosX64()
  sourceSets {
    all {
      languageSettings {
        useExperimentalAnnotation("kotlin.Experimental")
      }
    }
    commonMain {
      dependencies {
        api deps.kotlin.stdlib.common
        api deps.okio.multiplatform
      }
    }
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.annotations
      }
    }
    jvmMain {
      dependencies {
        api deps.kotlin.stdlib.jdk6
        compileOnly deps.android
      }
    }
    jvmTest {
      dependencies {
        implementation deps.assertj
        implementation deps.kotlin.test.junit
      }
    }
    jsMain {
      dependencies {
        api deps.kotlin.stdlib.js
      }
    }
    jsTest {
      dependencies {
        implementation deps.kotlin.test.js
      }
    }
    nativeMain {
      dependsOn commonMain
    }
    nativeTest {
      dependsOn commonTest
    }

    configure([iosX64Main, iosArm64Main, linuxX64Main, macosX64Main]) {
      dependsOn nativeMain
    }
    configure([iosX64Test, iosArm64Test, linuxX64Test, macosX64Test]) {
      dependsOn nativeTest
    }
  }
}

afterEvaluate {
  tasks.create('installLocally') {
    dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
    dependsOn 'publishMetadataPublicationToTestRepository'
    dependsOn 'publishJvmPublicationToTestRepository'
  }
}

// TODO(egorand): Remove when https://github.com/srs/gradle-node-plugin/issues/301 is fixed
repositories.whenObjectAdded {
  if (it instanceof IvyArtifactRepository) {
    metadataSources {
      artifact()
    }
  }
}

apply from: 'jvm.gradle'
apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

publishing {
  // Use default artifact name for the JVM target
  publications {
    kotlinMultiplatform {
      artifactId = 'wire-runtime-multiplatform'
    }
    jvm {
      artifactId = 'wire-runtime'
    }
  }
}
