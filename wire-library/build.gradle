buildscript {
  // If false - JS targets will not be configured in multiplatform projects.
  ext.kmpJsEnabled = Boolean.parseBoolean(System.getProperty('kjs', 'true'))

  // If false - Native targets will not be configured in multiplatform projects.
  ext.kmpNativeEnabled = Boolean.parseBoolean(System.getProperty('knative', 'true'))

  apply from: new File("./dependencies.gradle")

  dependencies {
    classpath deps.plugins.kotlin
    classpath deps.plugins.kotlinSerialization
    classpath deps.plugins.shadow
    classpath deps.plugins.japicmp
    classpath deps.plugins.mavenPublish
    classpath deps.animalSniffer.gradle
    // https://github.com/melix/japicmp-gradle-plugin/issues/36
    classpath 'com.google.guava:guava:28.2-jre'
  }

  repositories {
    mavenCentral()
    gradlePluginPortal()
  }
}

allprojects {
  group = GROUP
  version = VERSION_NAME

  repositories {
    mavenCentral()
    google()
    jcenter()
  }
}

subprojects { project ->
  // The `application` plugin internally applies the `distribution` plugin and
  // automatically adds tasks to create/publish tar and zip artifacts.
  // https://docs.gradle.org/current/userguide/application_plugin.html
  // https://docs.gradle.org/current/userguide/distribution_plugin.html#sec:publishing_distributions_upload
  plugins.withType(DistributionPlugin) {
    distTar.enabled = false
    distZip.enabled = false
    configurations.archives.artifacts.removeAll { it.file =~ 'tar' || it.file =~ 'zip' }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      jvmTarget = "1.8"
      // Disable optimized callable references. See https://youtrack.jetbrains.com/issue/KT-37435
      freeCompilerArgs += "-Xno-optimized-callable-references"
    }
  }

  tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  if (!project.name.endsWith('-swift')) {
    // TODO this should use plugins.withId first rather than names
    if (project.name != 'wire-runtime' &&
        project.name != 'wire-kotlin-serialization' &&
        project.name != 'wire-schema' &&
        project.name != 'sample' &&
        project.name != 'wire-codegen-sample' &&
        project.name != 'japicmp' &&
        project.name != 'wire-tests' &&
        project.name != 'wire-grpc-client') {
      apply plugin: 'com.vanniktech.maven.publish'
    } else {
      tasks.create('uploadArchives') {
        // TODO(egorand): Find out why this became a problem.
        // No-op task to prevent Gradle from calling a real uploadArchives task which is added by an
        // unknown plugin (or Gradle itself) and fails for multiplatform projects.
      }
    }
    apply plugin: 'checkstyle'

    afterEvaluate {
      checkstyle {
        toolVersion '7.7'
        sourceSets = [project.sourceSets.main]
      }
    }
  }
}

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
