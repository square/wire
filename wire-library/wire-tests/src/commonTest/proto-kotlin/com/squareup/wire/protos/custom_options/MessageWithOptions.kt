// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.custom_options.MessageWithOptions in custom_options.proto
package com.squareup.wire.protos.custom_options

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

@MyMessageOptionTwoOption(91011.0f)
@MyMessageOptionFourOption(FooBar.FooBarBazEnum.FOO)
public class MessageWithOptions(
  unknownFields: ByteString = ByteString.EMPTY
) : Message<MessageWithOptions, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  public override fun newBuilder(): Nothing = throw AssertionError()

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is MessageWithOptions) return false
    if (unknownFields != other.unknownFields) return false
    return true
  }

  public override fun hashCode(): Int = unknownFields.hashCode()

  public override fun toString(): String = "MessageWithOptions{}"

  public fun copy(unknownFields: ByteString = this.unknownFields): MessageWithOptions =
      MessageWithOptions(unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<MessageWithOptions> = object :
        ProtoAdapter<MessageWithOptions>(
      FieldEncoding.LENGTH_DELIMITED, 
      MessageWithOptions::class, 
      "type.googleapis.com/squareup.protos.custom_options.MessageWithOptions", 
      PROTO_2, 
      null
    ) {
      public override fun encodedSize(value: MessageWithOptions): Int {
        var size = value.unknownFields.size
        return size
      }

      public override fun encode(writer: ProtoWriter, value: MessageWithOptions): Unit {
        writer.writeBytes(value.unknownFields)
      }

      public override fun decode(reader: ProtoReader): MessageWithOptions {
        val unknownFields = reader.forEachTag(reader::readUnknownField)
        return MessageWithOptions(
          unknownFields = unknownFields
        )
      }

      public override fun redact(value: MessageWithOptions): MessageWithOptions = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
