/*
 * Copyright 2021 Square Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Copied from https://github.com/juliaogris/reflect/blob/v0.0.7/protos/echo2/echo2.proto
 */

syntax = "proto2";

package echo2;
option go_package = "github.com/juliaogris/guppy/pkg/echo2";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";

// Echo service.
service Echo {
  // Hello greets.
  rpc Hello (HelloRequest) returns (HelloResponse) {
    option (google.api.http) = { post:"/api/echo/hello" body:"*" };
  };
  // HelloStream greets repeatedly.
  rpc HelloStream (HelloRequest) returns (stream HelloResponse) {
    option (google.api.http) = { post:"/api/echo/stream" body:"*" };
  };
}

message HelloRequest {
  required string message = 1;
  optional Details more_details = 2;
}

message HelloResponse {
  required string robot_response = 1;
}

message Details {
  map<string, int64> label_count = 1;
  required ColorType color_type = 2;
  required google.protobuf.Any any = 3;
  repeated Notification notifications = 4;
  optional int32 a_int32 = 5;
  optional uint32 a_uint32 = 6;
  optional int64 a_int64 = 7;
  optional uint64 a_uint64 = 8;
  optional bool a_bool = 9;
  optional sint32 a_sint32 = 10;
  optional sint64 a_sint64 = 11;
  optional string a_string = 12;
  optional bytes a_bytes = 13;
  optional fixed32 a_fixed32 = 14;
  optional sfixed32 a_sfixed32 = 15;
  optional fixed64 a_fixed64 = 16;
  optional sfixed64 a_sfixed64 = 17;
}

enum ColorType {
  RED = 0;
  BLUE = 1;
  GREEN = 2;
}

message Notification {
  required int32 id = 1;
  oneof instrument {
    PrivateNotification private = 2;
    PublicNotification public = 3;
  }
}

message PrivateNotification {
  required string secret_content = 1;
}

message PublicNotification {
  required string content = 1;
}
