// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.kotlin.simple.SimpleMessage in simple_message_builders_only.proto
@file:Suppress(
  "DEPRECATION",
  "RUNTIME_ANNOTATION_NOT_SUPPORTED",
)

package com.squareup.wire.protos.kotlin.simple.buildersonly

import com.squareup.wire.EnumAdapter
import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireEnum
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.JvmStatic
import com.squareup.wire.`internal`.JvmSynthetic
import com.squareup.wire.`internal`.checkElementsNotNull
import com.squareup.wire.`internal`.immutableCopyOf
import com.squareup.wire.`internal`.sanitize
import com.squareup.wire.protos.kotlin.foreign.ForeignEnum
import com.squareup.wire.protos.kotlin.simple.ExternalMessage
import kotlin.Any
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.Double
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import okio.ByteString

/**
 * A message for testing.
 */
public class SimpleMessage private constructor(
  builder: Builder,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<SimpleMessage, SimpleMessage.Builder>(ADAPTER, unknownFields) {
  /**
   * An optional int32 //&#42;we should escape that comment*
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    schemaIndex = 0,
  )
  @JvmField
  public val optional_int32: Int? = builder.optional_int32

  /**
   * An optional NestedMessage, *deprecated&#42;//
   */
  @Deprecated(message = "optional_nested_msg is deprecated")
  @field:WireField(
    tag = 2,
    adapter =
        "com.squareup.wire.protos.kotlin.simple.buildersonly.SimpleMessage${'$'}NestedMessage#ADAPTER",
    schemaIndex = 1,
  )
  @JvmField
  public val optional_nested_msg: NestedMessage? = builder.optional_nested_msg

  /**
   * An optional ExternalMessage
   */
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.protos.kotlin.simple.ExternalMessage#ADAPTER",
    schemaIndex = 2,
  )
  @JvmField
  public val optional_external_msg: ExternalMessage? = builder.optional_external_msg

  @field:WireField(
    tag = 4,
    adapter =
        "com.squareup.wire.protos.kotlin.simple.buildersonly.SimpleMessage${'$'}NestedEnum#ADAPTER",
    schemaIndex = 3,
  )
  @JvmField
  public val default_nested_enum: NestedEnum? = builder.default_nested_enum

  /**
   * A required int32
   */
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.REQUIRED,
    schemaIndex = 4,
  )
  @JvmField
  public val required_int32: Int = builder.required_int32!!

  /**
   * A repeated double, deprecated
   */
  @Deprecated(message = "repeated_double is deprecated")
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#DOUBLE",
    label = WireField.Label.REPEATED,
    schemaIndex = 5,
  )
  @JvmField
  public val repeated_double: List<Double> = immutableCopyOf("repeated_double",
      builder.repeated_double)

  /**
   * enum from another package with an explicit default
   */
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.protos.kotlin.foreign.ForeignEnum#ADAPTER",
    schemaIndex = 6,
  )
  @JvmField
  public val default_foreign_enum: ForeignEnum? = builder.default_foreign_enum

  /**
   * enum from another package without an explicit default
   */
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.protos.kotlin.foreign.ForeignEnum#ADAPTER",
    schemaIndex = 7,
  )
  @JvmField
  public val no_default_foreign_enum: ForeignEnum? = builder.no_default_foreign_enum

  /**
   * field with the same name as a Java keyword
   */
  @field:WireField(
    tag = 9,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    declaredName = "package",
    schemaIndex = 8,
  )
  @JvmField
  public val package_: String? = builder.package_

  /**
   * field with the name "result"
   */
  @field:WireField(
    tag = 10,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    schemaIndex = 9,
  )
  @JvmField
  public val result: String? = builder.result

  /**
   * field with the name "other"
   */
  @field:WireField(
    tag = 11,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    schemaIndex = 10,
  )
  @JvmField
  public val other: String? = builder.other

  /**
   * field with the name "o"
   */
  @field:WireField(
    tag = 12,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    schemaIndex = 11,
  )
  @JvmField
  public val o: String? = builder.o

  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.optional_int32 = optional_int32
    builder.optional_nested_msg = optional_nested_msg
    builder.optional_external_msg = optional_external_msg
    builder.default_nested_enum = default_nested_enum
    builder.required_int32 = required_int32
    builder.repeated_double = repeated_double
    builder.default_foreign_enum = default_foreign_enum
    builder.no_default_foreign_enum = no_default_foreign_enum
    builder.package_ = package_
    builder.result = result
    builder.other = other
    builder.o = o
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other_: Any?): Boolean {
    if (other_ === this) return true
    if (other_ !is SimpleMessage) return false
    if (unknownFields != other_.unknownFields) return false
    if (optional_int32 != other_.optional_int32) return false
    if (optional_nested_msg != other_.optional_nested_msg) return false
    if (optional_external_msg != other_.optional_external_msg) return false
    if (default_nested_enum != other_.default_nested_enum) return false
    if (required_int32 != other_.required_int32) return false
    if (repeated_double != other_.repeated_double) return false
    if (default_foreign_enum != other_.default_foreign_enum) return false
    if (no_default_foreign_enum != other_.no_default_foreign_enum) return false
    if (package_ != other_.package_) return false
    if (result != other_.result) return false
    if (other != other_.other) return false
    if (o != other_.o) return false
    return true
  }

  override fun hashCode(): Int {
    var result_ = super.hashCode
    if (result_ == 0) {
      result_ = unknownFields.hashCode()
      result_ = result_ * 37 + (optional_int32?.hashCode() ?: 0)
      result_ = result_ * 37 + (optional_nested_msg?.hashCode() ?: 0)
      result_ = result_ * 37 + (optional_external_msg?.hashCode() ?: 0)
      result_ = result_ * 37 + (default_nested_enum?.hashCode() ?: 0)
      result_ = result_ * 37 + required_int32.hashCode()
      result_ = result_ * 37 + repeated_double.hashCode()
      result_ = result_ * 37 + (default_foreign_enum?.hashCode() ?: 0)
      result_ = result_ * 37 + (no_default_foreign_enum?.hashCode() ?: 0)
      result_ = result_ * 37 + (package_?.hashCode() ?: 0)
      result_ = result_ * 37 + (result?.hashCode() ?: 0)
      result_ = result_ * 37 + (other?.hashCode() ?: 0)
      result_ = result_ * 37 + (o?.hashCode() ?: 0)
      super.hashCode = result_
    }
    return result_
  }

  override fun toString(): String {
    val result_ = mutableListOf<String>()
    if (optional_int32 != null) result_ += """optional_int32=$optional_int32"""
    if (optional_nested_msg != null) result_ += """optional_nested_msg=$optional_nested_msg"""
    if (optional_external_msg != null) result_ += """optional_external_msg=$optional_external_msg"""
    if (default_nested_enum != null) result_ += """default_nested_enum=$default_nested_enum"""
    result_ += """required_int32=$required_int32"""
    if (repeated_double.isNotEmpty()) result_ += """repeated_double=$repeated_double"""
    if (default_foreign_enum != null) result_ += """default_foreign_enum=$default_foreign_enum"""
    if (no_default_foreign_enum != null) result_ +=
        """no_default_foreign_enum=$no_default_foreign_enum"""
    if (package_ != null) result_ += """package_=${sanitize(package_)}"""
    if (result != null) result_ += """result=${sanitize(result)}"""
    if (other != null) result_ += """other=${sanitize(other)}"""
    if (o != null) result_ += """o=${sanitize(o)}"""
    return result_.joinToString(prefix = "SimpleMessage{", separator = ", ", postfix = "}")
  }

  public class Builder : Message.Builder<SimpleMessage, Builder>() {
    @JvmField
    public var optional_int32: Int? = null

    @JvmField
    public var optional_nested_msg: NestedMessage? = null

    @JvmField
    public var optional_external_msg: ExternalMessage? = null

    @JvmField
    public var default_nested_enum: NestedEnum? = null

    @JvmField
    public var required_int32: Int? = null

    @JvmField
    public var repeated_double: List<Double> = emptyList()

    @JvmField
    public var default_foreign_enum: ForeignEnum? = null

    @JvmField
    public var no_default_foreign_enum: ForeignEnum? = null

    @JvmField
    public var package_: String? = null

    @JvmField
    public var result: String? = null

    @JvmField
    public var other: String? = null

    @JvmField
    public var o: String? = null

    /**
     * An optional int32 //&#42;we should escape that comment*
     */
    public fun optional_int32(optional_int32: Int?): Builder {
      this.optional_int32 = optional_int32
      return this
    }

    /**
     * An optional NestedMessage, *deprecated&#42;//
     */
    @Deprecated(message = "optional_nested_msg is deprecated")
    public fun optional_nested_msg(optional_nested_msg: NestedMessage?): Builder {
      this.optional_nested_msg = optional_nested_msg
      return this
    }

    /**
     * An optional ExternalMessage
     */
    public fun optional_external_msg(optional_external_msg: ExternalMessage?): Builder {
      this.optional_external_msg = optional_external_msg
      return this
    }

    public fun default_nested_enum(default_nested_enum: NestedEnum?): Builder {
      this.default_nested_enum = default_nested_enum
      return this
    }

    /**
     * A required int32
     */
    public fun required_int32(required_int32: Int): Builder {
      this.required_int32 = required_int32
      return this
    }

    /**
     * A repeated double, deprecated
     */
    @Deprecated(message = "repeated_double is deprecated")
    public fun repeated_double(repeated_double: List<Double>): Builder {
      checkElementsNotNull(repeated_double)
      this.repeated_double = repeated_double
      return this
    }

    /**
     * enum from another package with an explicit default
     */
    public fun default_foreign_enum(default_foreign_enum: ForeignEnum?): Builder {
      this.default_foreign_enum = default_foreign_enum
      return this
    }

    /**
     * enum from another package without an explicit default
     */
    public fun no_default_foreign_enum(no_default_foreign_enum: ForeignEnum?): Builder {
      this.no_default_foreign_enum = no_default_foreign_enum
      return this
    }

    /**
     * field with the same name as a Java keyword
     */
    public fun package_(package_: String?): Builder {
      this.package_ = package_
      return this
    }

    /**
     * field with the name "result"
     */
    public fun result(result: String?): Builder {
      this.result = result
      return this
    }

    /**
     * field with the name "other"
     */
    public fun other(other: String?): Builder {
      this.other = other
      return this
    }

    /**
     * field with the name "o"
     */
    public fun o(o: String?): Builder {
      this.o = o
      return this
    }

    override fun build(): SimpleMessage = SimpleMessage(
      builder = this,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    public const val DEFAULT_OPTIONAL_INT32: Int = 123

    @JvmField
    public val DEFAULT_DEFAULT_NESTED_ENUM: NestedEnum = NestedEnum.BAZ

    public const val DEFAULT_REQUIRED_INT32: Int = 456

    @JvmField
    public val DEFAULT_DEFAULT_FOREIGN_ENUM: ForeignEnum = ForeignEnum.BAX

    @JvmField
    public val ADAPTER: ProtoAdapter<SimpleMessage> = object : ProtoAdapter<SimpleMessage>(
      FieldEncoding.LENGTH_DELIMITED, 
      SimpleMessage::class, 
      "type.googleapis.com/squareup.protos.kotlin.simple.SimpleMessage", 
      PROTO_2, 
      null, 
      "simple_message_builders_only.proto"
    ) {
      override fun encodedSize(`value`: SimpleMessage): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.INT32.encodedSizeWithTag(1, value.optional_int32)
        size += NestedMessage.ADAPTER.encodedSizeWithTag(2, value.optional_nested_msg)
        size += ExternalMessage.ADAPTER.encodedSizeWithTag(3, value.optional_external_msg)
        size += NestedEnum.ADAPTER.encodedSizeWithTag(4, value.default_nested_enum)
        size += ProtoAdapter.INT32.encodedSizeWithTag(5, value.required_int32)
        size += ProtoAdapter.DOUBLE.asRepeated().encodedSizeWithTag(6, value.repeated_double)
        size += ForeignEnum.ADAPTER.encodedSizeWithTag(7, value.default_foreign_enum)
        size += ForeignEnum.ADAPTER.encodedSizeWithTag(8, value.no_default_foreign_enum)
        size += ProtoAdapter.STRING.encodedSizeWithTag(9, value.package_)
        size += ProtoAdapter.STRING.encodedSizeWithTag(10, value.result)
        size += ProtoAdapter.STRING.encodedSizeWithTag(11, value.other)
        size += ProtoAdapter.STRING.encodedSizeWithTag(12, value.o)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: SimpleMessage) {
        ProtoAdapter.INT32.encodeWithTag(writer, 1, value.optional_int32)
        NestedMessage.ADAPTER.encodeWithTag(writer, 2, value.optional_nested_msg)
        ExternalMessage.ADAPTER.encodeWithTag(writer, 3, value.optional_external_msg)
        NestedEnum.ADAPTER.encodeWithTag(writer, 4, value.default_nested_enum)
        ProtoAdapter.INT32.encodeWithTag(writer, 5, value.required_int32)
        ProtoAdapter.DOUBLE.asRepeated().encodeWithTag(writer, 6, value.repeated_double)
        ForeignEnum.ADAPTER.encodeWithTag(writer, 7, value.default_foreign_enum)
        ForeignEnum.ADAPTER.encodeWithTag(writer, 8, value.no_default_foreign_enum)
        ProtoAdapter.STRING.encodeWithTag(writer, 9, value.package_)
        ProtoAdapter.STRING.encodeWithTag(writer, 10, value.result)
        ProtoAdapter.STRING.encodeWithTag(writer, 11, value.other)
        ProtoAdapter.STRING.encodeWithTag(writer, 12, value.o)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: SimpleMessage) {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.STRING.encodeWithTag(writer, 12, value.o)
        ProtoAdapter.STRING.encodeWithTag(writer, 11, value.other)
        ProtoAdapter.STRING.encodeWithTag(writer, 10, value.result)
        ProtoAdapter.STRING.encodeWithTag(writer, 9, value.package_)
        ForeignEnum.ADAPTER.encodeWithTag(writer, 8, value.no_default_foreign_enum)
        ForeignEnum.ADAPTER.encodeWithTag(writer, 7, value.default_foreign_enum)
        ProtoAdapter.DOUBLE.asRepeated().encodeWithTag(writer, 6, value.repeated_double)
        ProtoAdapter.INT32.encodeWithTag(writer, 5, value.required_int32)
        NestedEnum.ADAPTER.encodeWithTag(writer, 4, value.default_nested_enum)
        ExternalMessage.ADAPTER.encodeWithTag(writer, 3, value.optional_external_msg)
        NestedMessage.ADAPTER.encodeWithTag(writer, 2, value.optional_nested_msg)
        ProtoAdapter.INT32.encodeWithTag(writer, 1, value.optional_int32)
      }

      override fun decode(reader: ProtoReader): SimpleMessage {
        val builder = Builder()
        val repeated_double = mutableListOf<Double>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> builder.optional_int32(ProtoAdapter.INT32.decode(reader))
            2 -> builder.optional_nested_msg(NestedMessage.ADAPTER.decode(reader))
            3 -> builder.optional_external_msg(ExternalMessage.ADAPTER.decode(reader))
            4 -> try {
              builder.default_nested_enum(NestedEnum.ADAPTER.decode(reader))
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            5 -> builder.required_int32(ProtoAdapter.INT32.decode(reader))
            6 -> repeated_double.add(ProtoAdapter.DOUBLE.decode(reader))
            7 -> try {
              builder.default_foreign_enum(ForeignEnum.ADAPTER.decode(reader))
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            8 -> try {
              builder.no_default_foreign_enum(ForeignEnum.ADAPTER.decode(reader))
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            9 -> builder.package_(ProtoAdapter.STRING.decode(reader))
            10 -> builder.result(ProtoAdapter.STRING.decode(reader))
            11 -> builder.other(ProtoAdapter.STRING.decode(reader))
            12 -> builder.o(ProtoAdapter.STRING.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return SimpleMessage(
          builder = builder
            .repeated_double(repeated_double),
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: SimpleMessage): SimpleMessage = SimpleMessage(
        builder = value.newBuilder()
          .optional_nested_msg(value.optional_nested_msg?.let(NestedMessage.ADAPTER::redact))
          .optional_external_msg(value.optional_external_msg?.let(ExternalMessage.ADAPTER::redact)),
        unknownFields = ByteString.EMPTY,
      )
    }

    private const val serialVersionUID: Long = 0L

    @JvmSynthetic
    public inline fun build(body: Builder.() -> Unit): SimpleMessage = Builder().apply(body).build()
  }

  public class NestedMessage private constructor(
    builder: Builder,
    unknownFields: ByteString = ByteString.EMPTY,
  ) : Message<NestedMessage, NestedMessage.Builder>(ADAPTER, unknownFields) {
    /**
     * An optional int32
     */
    @field:WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      schemaIndex = 0,
    )
    @JvmField
    public val bb: Int? = builder.bb

    override fun newBuilder(): Builder {
      val builder = Builder()
      builder.bb = bb
      builder.addUnknownFields(unknownFields)
      return builder
    }

    override fun equals(other: Any?): Boolean {
      if (other === this) return true
      if (other !is NestedMessage) return false
      if (unknownFields != other.unknownFields) return false
      if (bb != other.bb) return false
      return true
    }

    override fun hashCode(): Int {
      var result = super.hashCode
      if (result == 0) {
        result = unknownFields.hashCode()
        result = result * 37 + (bb?.hashCode() ?: 0)
        super.hashCode = result
      }
      return result
    }

    override fun toString(): String {
      val result = mutableListOf<String>()
      if (bb != null) result += """bb=$bb"""
      return result.joinToString(prefix = "NestedMessage{", separator = ", ", postfix = "}")
    }

    public class Builder : Message.Builder<NestedMessage, Builder>() {
      @JvmField
      public var bb: Int? = null

      /**
       * An optional int32
       */
      public fun bb(bb: Int?): Builder {
        this.bb = bb
        return this
      }

      override fun build(): NestedMessage = NestedMessage(
        builder = this,
        unknownFields = buildUnknownFields()
      )
    }

    public companion object {
      @JvmField
      public val ADAPTER: ProtoAdapter<NestedMessage> = object : ProtoAdapter<NestedMessage>(
        FieldEncoding.LENGTH_DELIMITED, 
        NestedMessage::class, 
        "type.googleapis.com/squareup.protos.kotlin.simple.SimpleMessage.NestedMessage", 
        PROTO_2, 
        null, 
        "simple_message_builders_only.proto"
      ) {
        override fun encodedSize(`value`: NestedMessage): Int {
          var size = value.unknownFields.size
          size += ProtoAdapter.INT32.encodedSizeWithTag(1, value.bb)
          return size
        }

        override fun encode(writer: ProtoWriter, `value`: NestedMessage) {
          ProtoAdapter.INT32.encodeWithTag(writer, 1, value.bb)
          writer.writeBytes(value.unknownFields)
        }

        override fun encode(writer: ReverseProtoWriter, `value`: NestedMessage) {
          writer.writeBytes(value.unknownFields)
          ProtoAdapter.INT32.encodeWithTag(writer, 1, value.bb)
        }

        override fun decode(reader: ProtoReader): NestedMessage {
          val builder = Builder()
          val unknownFields = reader.forEachTag { tag ->
            when (tag) {
              1 -> builder.bb(ProtoAdapter.INT32.decode(reader))
              else -> reader.readUnknownField(tag)
            }
          }
          return NestedMessage(
            builder = builder,
            unknownFields = unknownFields
          )
        }

        override fun redact(`value`: NestedMessage): NestedMessage = NestedMessage(
          builder = value.newBuilder(),
          unknownFields = ByteString.EMPTY,
        )
      }

      private const val serialVersionUID: Long = 0L

      @JvmSynthetic
      public inline fun build(body: Builder.() -> Unit): NestedMessage =
          Builder().apply(body).build()
    }
  }

  public enum class NestedEnum(
    override val `value`: Int,
  ) : WireEnum {
    FOO(1),
    BAR(2),
    BAZ(3),
    @Deprecated(message = "BUZ is deprecated")
    BUZ(3),
    ;

    public companion object {
      @JvmField
      public val ADAPTER: ProtoAdapter<NestedEnum> = object : EnumAdapter<NestedEnum>(
        NestedEnum::class, 
        PROTO_2, 
        null
      ) {
        override fun fromValue(`value`: Int): NestedEnum? = NestedEnum.fromValue(`value`)
      }

      @JvmStatic
      public fun fromValue(`value`: Int): NestedEnum? = when (`value`) {
        1 -> FOO
        2 -> BAR
        3 -> BAZ
        3 -> @Suppress("DEPRECATION") BUZ
        else -> null
      }
    }
  }
}
