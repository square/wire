// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: map.proto
package com.squareup.wire.protos.kotlin.map

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.TagHandler
import com.squareup.wire.WireField
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmField
import okio.ByteString

data class Thing(@field:WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    @JvmField val name: String? = null, val unknownFields: ByteString = ByteString.EMPTY) :
    Message<Thing, Thing.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.name = name
    builder.addUnknownFields(unknownFields())
    return builder
  }

  class Builder : Message.Builder<Thing, Builder>() {
    @JvmField
    var name: String? = null

    fun name(name: String?): Builder {
      this.name = name
      return this
    }

    override fun build(): Thing = Thing(
      name = name,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<Thing> = object : ProtoAdapter<Thing>(
      FieldEncoding.LENGTH_DELIMITED, 
      Thing::class
    ) {
      override fun encodedSize(value: Thing): Int = 
        ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) +
        value.unknownFields.size

      override fun encode(writer: ProtoWriter, value: Thing) {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): Thing {
        var name: String? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> name = ProtoAdapter.STRING.decode(reader)
            else -> TagHandler.UNKNOWN_TAG
          }
        }
        return Thing(
          name = name,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: Thing): Thing = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }
  }
}
