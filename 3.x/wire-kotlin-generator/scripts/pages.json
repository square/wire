[{"name":"BLOCKING","description":"com.squareup.wire.kotlin.RpcCallStyle.BLOCKING","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/-b-l-o-c-k-i-n-g/index.html","searchKeys":["BLOCKING","BLOCKING","com.squareup.wire.kotlin.RpcCallStyle.BLOCKING"]},{"name":"CLIENT","description":"com.squareup.wire.kotlin.RpcRole.CLIENT","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/-c-l-i-e-n-t/index.html","searchKeys":["CLIENT","CLIENT","com.squareup.wire.kotlin.RpcRole.CLIENT"]},{"name":"ENUM_CLASS","description":"com.squareup.wire.kotlin.EnumMode.ENUM_CLASS","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/-e-n-u-m_-c-l-a-s-s/index.html","searchKeys":["ENUM_CLASS","ENUM_CLASS","com.squareup.wire.kotlin.EnumMode.ENUM_CLASS"]},{"name":"NONE","description":"com.squareup.wire.kotlin.RpcRole.NONE","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/-n-o-n-e/index.html","searchKeys":["NONE","NONE","com.squareup.wire.kotlin.RpcRole.NONE"]},{"name":"SEALED_CLASS","description":"com.squareup.wire.kotlin.EnumMode.SEALED_CLASS","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/-s-e-a-l-e-d_-c-l-a-s-s/index.html","searchKeys":["SEALED_CLASS","SEALED_CLASS","com.squareup.wire.kotlin.EnumMode.SEALED_CLASS"]},{"name":"SERVER","description":"com.squareup.wire.kotlin.RpcRole.SERVER","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/-s-e-r-v-e-r/index.html","searchKeys":["SERVER","SERVER","com.squareup.wire.kotlin.RpcRole.SERVER"]},{"name":"SUSPENDING","description":"com.squareup.wire.kotlin.RpcCallStyle.SUSPENDING","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/-s-u-s-p-e-n-d-i-n-g/index.html","searchKeys":["SUSPENDING","SUSPENDING","com.squareup.wire.kotlin.RpcCallStyle.SUSPENDING"]},{"name":"class KotlinGenerator","description":"com.squareup.wire.kotlin.KotlinGenerator","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/index.html","searchKeys":["KotlinGenerator","class KotlinGenerator","com.squareup.wire.kotlin.KotlinGenerator"]},{"name":"class KotlinSchemaHandler(outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, val enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false) : SchemaHandler","description":"com.squareup.wire.kotlin.KotlinSchemaHandler","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/index.html","searchKeys":["KotlinSchemaHandler","class KotlinSchemaHandler(outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, val enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false) : SchemaHandler","com.squareup.wire.kotlin.KotlinSchemaHandler"]},{"name":"constructor(outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false)","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.KotlinSchemaHandler","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/-kotlin-schema-handler.html","searchKeys":["KotlinSchemaHandler","constructor(outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false)","com.squareup.wire.kotlin.KotlinSchemaHandler.KotlinSchemaHandler"]},{"name":"enum EnumMode : Enum<EnumMode> ","description":"com.squareup.wire.kotlin.EnumMode","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/index.html","searchKeys":["EnumMode","enum EnumMode : Enum<EnumMode> ","com.squareup.wire.kotlin.EnumMode"]},{"name":"enum RpcCallStyle : Enum<RpcCallStyle> ","description":"com.squareup.wire.kotlin.RpcCallStyle","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/index.html","searchKeys":["RpcCallStyle","enum RpcCallStyle : Enum<RpcCallStyle> ","com.squareup.wire.kotlin.RpcCallStyle"]},{"name":"enum RpcRole : Enum<RpcRole> ","description":"com.squareup.wire.kotlin.RpcRole","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/index.html","searchKeys":["RpcRole","enum RpcRole : Enum<RpcRole> ","com.squareup.wire.kotlin.RpcRole"]},{"name":"fun builtInType(protoType: ProtoType): Boolean","description":"com.squareup.wire.kotlin.KotlinGenerator.Companion.builtInType","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/-companion/built-in-type.html","searchKeys":["builtInType","fun builtInType(protoType: ProtoType): Boolean","com.squareup.wire.kotlin.KotlinGenerator.Companion.builtInType"]},{"name":"fun generateOptionType(extend: Extend, field: Field): TypeSpec?","description":"com.squareup.wire.kotlin.KotlinGenerator.generateOptionType","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generate-option-type.html","searchKeys":["generateOptionType","fun generateOptionType(extend: Extend, field: Field): TypeSpec?","com.squareup.wire.kotlin.KotlinGenerator.generateOptionType"]},{"name":"fun generateServiceTypeSpecs(service: Service, onlyRpc: Rpc? = null): Map<ClassName, TypeSpec>","description":"com.squareup.wire.kotlin.KotlinGenerator.generateServiceTypeSpecs","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generate-service-type-specs.html","searchKeys":["generateServiceTypeSpecs","fun generateServiceTypeSpecs(service: Service, onlyRpc: Rpc? = null): Map<ClassName, TypeSpec>","com.squareup.wire.kotlin.KotlinGenerator.generateServiceTypeSpecs"]},{"name":"fun generateType(type: Type): TypeSpec","description":"com.squareup.wire.kotlin.KotlinGenerator.generateType","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generate-type.html","searchKeys":["generateType","fun generateType(type: Type): TypeSpec","com.squareup.wire.kotlin.KotlinGenerator.generateType"]},{"name":"fun generatedServiceName(service: Service, rpc: Rpc? = null, isImplementation: Boolean = false): ClassName","description":"com.squareup.wire.kotlin.KotlinGenerator.generatedServiceName","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generated-service-name.html","searchKeys":["generatedServiceName","fun generatedServiceName(service: Service, rpc: Rpc? = null, isImplementation: Boolean = false): ClassName","com.squareup.wire.kotlin.KotlinGenerator.generatedServiceName"]},{"name":"fun generatedTypeName(member: ProtoMember): ClassName","description":"com.squareup.wire.kotlin.KotlinGenerator.generatedTypeName","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generated-type-name.html","searchKeys":["generatedTypeName","fun generatedTypeName(member: ProtoMember): ClassName","com.squareup.wire.kotlin.KotlinGenerator.generatedTypeName"]},{"name":"fun generatedTypeName(type: Type): ClassName","description":"com.squareup.wire.kotlin.KotlinGenerator.generatedTypeName","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/generated-type-name.html","searchKeys":["generatedTypeName","fun generatedTypeName(type: Type): ClassName","com.squareup.wire.kotlin.KotlinGenerator.generatedTypeName"]},{"name":"fun valueOf(value: String): EnumMode","description":"com.squareup.wire.kotlin.EnumMode.valueOf","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EnumMode","com.squareup.wire.kotlin.EnumMode.valueOf"]},{"name":"fun valueOf(value: String): RpcCallStyle","description":"com.squareup.wire.kotlin.RpcCallStyle.valueOf","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RpcCallStyle","com.squareup.wire.kotlin.RpcCallStyle.valueOf"]},{"name":"fun valueOf(value: String): RpcRole","description":"com.squareup.wire.kotlin.RpcRole.valueOf","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RpcRole","com.squareup.wire.kotlin.RpcRole.valueOf"]},{"name":"fun values(): Array<EnumMode>","description":"com.squareup.wire.kotlin.EnumMode.values","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/values.html","searchKeys":["values","fun values(): Array<EnumMode>","com.squareup.wire.kotlin.EnumMode.values"]},{"name":"fun values(): Array<RpcCallStyle>","description":"com.squareup.wire.kotlin.RpcCallStyle.values","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/values.html","searchKeys":["values","fun values(): Array<RpcCallStyle>","com.squareup.wire.kotlin.RpcCallStyle.values"]},{"name":"fun values(): Array<RpcRole>","description":"com.squareup.wire.kotlin.RpcRole.values","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/values.html","searchKeys":["values","fun values(): Array<RpcRole>","com.squareup.wire.kotlin.RpcRole.values"]},{"name":"object Companion","description":"com.squareup.wire.kotlin.KotlinGenerator.Companion","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.wire.kotlin.KotlinGenerator.Companion"]},{"name":"object Companion","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.Companion","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.wire.kotlin.KotlinSchemaHandler.Companion"]},{"name":"open override fun handle(extend: Extend, field: Field, context: SchemaHandler.Context): Path?","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.handle","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/handle.html","searchKeys":["handle","open override fun handle(extend: Extend, field: Field, context: SchemaHandler.Context): Path?","com.squareup.wire.kotlin.KotlinSchemaHandler.handle"]},{"name":"open override fun handle(schema: Schema, context: SchemaHandler.Context)","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.handle","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/handle.html","searchKeys":["handle","open override fun handle(schema: Schema, context: SchemaHandler.Context)","com.squareup.wire.kotlin.KotlinSchemaHandler.handle"]},{"name":"open override fun handle(service: Service, context: SchemaHandler.Context): List<Path>","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.handle","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/handle.html","searchKeys":["handle","open override fun handle(service: Service, context: SchemaHandler.Context): List<Path>","com.squareup.wire.kotlin.KotlinSchemaHandler.handle"]},{"name":"open override fun handle(type: Type, context: SchemaHandler.Context): Path?","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.handle","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/handle.html","searchKeys":["handle","open override fun handle(type: Type, context: SchemaHandler.Context): Path?","com.squareup.wire.kotlin.KotlinSchemaHandler.handle"]},{"name":"operator fun invoke(schema: Schema, profile: Profile = Profile(), emitAndroid: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false): KotlinGenerator","description":"com.squareup.wire.kotlin.KotlinGenerator.Companion.invoke","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(schema: Schema, profile: Profile = Profile(), emitAndroid: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false): KotlinGenerator","com.squareup.wire.kotlin.KotlinGenerator.Companion.invoke"]},{"name":"val entries: EnumEntries<EnumMode>","description":"com.squareup.wire.kotlin.EnumMode.entries","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-enum-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<EnumMode>","com.squareup.wire.kotlin.EnumMode.entries"]},{"name":"val entries: EnumEntries<RpcCallStyle>","description":"com.squareup.wire.kotlin.RpcCallStyle.entries","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-call-style/entries.html","searchKeys":["entries","val entries: EnumEntries<RpcCallStyle>","com.squareup.wire.kotlin.RpcCallStyle.entries"]},{"name":"val entries: EnumEntries<RpcRole>","description":"com.squareup.wire.kotlin.RpcRole.entries","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-rpc-role/entries.html","searchKeys":["entries","val entries: EnumEntries<RpcRole>","com.squareup.wire.kotlin.RpcRole.entries"]},{"name":"val enumMode: EnumMode","description":"com.squareup.wire.kotlin.KotlinSchemaHandler.enumMode","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-schema-handler/enum-mode.html","searchKeys":["enumMode","val enumMode: EnumMode","com.squareup.wire.kotlin.KotlinSchemaHandler.enumMode"]},{"name":"val schema: Schema","description":"com.squareup.wire.kotlin.KotlinGenerator.schema","location":"wire-kotlin-generator/com.squareup.wire.kotlin/-kotlin-generator/schema.html","searchKeys":["schema","val schema: Schema","com.squareup.wire.kotlin.KotlinGenerator.schema"]}]