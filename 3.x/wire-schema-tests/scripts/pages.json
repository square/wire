[{"name":"class SchemaBuilder","description":"com.squareup.wire.SchemaBuilder","location":"wire-schema-tests/com.squareup.wire/-schema-builder/index.html","searchKeys":["SchemaBuilder","class SchemaBuilder","com.squareup.wire.SchemaBuilder"]},{"name":"class WireTestLogger : WireLogger","description":"com.squareup.wire.WireTestLogger","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/index.html","searchKeys":["WireTestLogger","class WireTestLogger : WireLogger","com.squareup.wire.WireTestLogger"]},{"name":"constructor()","description":"com.squareup.wire.SchemaBuilder.SchemaBuilder","location":"wire-schema-tests/com.squareup.wire/-schema-builder/-schema-builder.html","searchKeys":["SchemaBuilder","constructor()","com.squareup.wire.SchemaBuilder.SchemaBuilder"]},{"name":"constructor()","description":"com.squareup.wire.WireTestLogger.WireTestLogger","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/-wire-test-logger.html","searchKeys":["WireTestLogger","constructor()","com.squareup.wire.WireTestLogger.WireTestLogger"]},{"name":"fun SchemaBuilder.addFakeRuntimeProtos(): SchemaBuilder","description":"com.squareup.wire.addFakeRuntimeProtos","location":"wire-schema-tests/com.squareup.wire/add-fake-runtime-protos.html","searchKeys":["addFakeRuntimeProtos","fun SchemaBuilder.addFakeRuntimeProtos(): SchemaBuilder","com.squareup.wire.addFakeRuntimeProtos"]},{"name":"fun add(name: Path, protoFile: String): SchemaBuilder","description":"com.squareup.wire.SchemaBuilder.add","location":"wire-schema-tests/com.squareup.wire/-schema-builder/add.html","searchKeys":["add","fun add(name: Path, protoFile: String): SchemaBuilder","com.squareup.wire.SchemaBuilder.add"]},{"name":"fun add(name: Path, protoFile: String, path: Path): SchemaBuilder","description":"com.squareup.wire.SchemaBuilder.add","location":"wire-schema-tests/com.squareup.wire/-schema-builder/add.html","searchKeys":["add","fun add(name: Path, protoFile: String, path: Path): SchemaBuilder","com.squareup.wire.SchemaBuilder.add"]},{"name":"fun addOpaqueTypes(vararg opaqueTypes: ProtoType): SchemaBuilder","description":"com.squareup.wire.SchemaBuilder.addOpaqueTypes","location":"wire-schema-tests/com.squareup.wire/-schema-builder/add-opaque-types.html","searchKeys":["addOpaqueTypes","fun addOpaqueTypes(vararg opaqueTypes: ProtoType): SchemaBuilder","com.squareup.wire.SchemaBuilder.addOpaqueTypes"]},{"name":"fun addProtoPath(name: Path, protoFile: String): SchemaBuilder","description":"com.squareup.wire.SchemaBuilder.addProtoPath","location":"wire-schema-tests/com.squareup.wire/-schema-builder/add-proto-path.html","searchKeys":["addProtoPath","fun addProtoPath(name: Path, protoFile: String): SchemaBuilder","com.squareup.wire.SchemaBuilder.addProtoPath"]},{"name":"fun build(): Schema","description":"com.squareup.wire.SchemaBuilder.build","location":"wire-schema-tests/com.squareup.wire/-schema-builder/build.html","searchKeys":["build","fun build(): Schema","com.squareup.wire.SchemaBuilder.build"]},{"name":"inline fun buildSchema(builderAction: SchemaBuilder.() -> Unit): Schema","description":"com.squareup.wire.buildSchema","location":"wire-schema-tests/com.squareup.wire/build-schema.html","searchKeys":["buildSchema","inline fun buildSchema(builderAction: SchemaBuilder.() -> Unit): Schema","com.squareup.wire.buildSchema"]},{"name":"open override fun artifactHandled(outputPath: Path, qualifiedName: String, targetName: String)","description":"com.squareup.wire.WireTestLogger.artifactHandled","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/artifact-handled.html","searchKeys":["artifactHandled","open override fun artifactHandled(outputPath: Path, qualifiedName: String, targetName: String)","com.squareup.wire.WireTestLogger.artifactHandled"]},{"name":"open override fun artifactSkipped(type: ProtoType, targetName: String)","description":"com.squareup.wire.WireTestLogger.artifactSkipped","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/artifact-skipped.html","searchKeys":["artifactSkipped","open override fun artifactSkipped(type: ProtoType, targetName: String)","com.squareup.wire.WireTestLogger.artifactSkipped"]},{"name":"open override fun unusedExcludesInTarget(unusedExcludes: Set<String>)","description":"com.squareup.wire.WireTestLogger.unusedExcludesInTarget","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-excludes-in-target.html","searchKeys":["unusedExcludesInTarget","open override fun unusedExcludesInTarget(unusedExcludes: Set<String>)","com.squareup.wire.WireTestLogger.unusedExcludesInTarget"]},{"name":"open override fun unusedIncludesInTarget(unusedIncludes: Set<String>)","description":"com.squareup.wire.WireTestLogger.unusedIncludesInTarget","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-includes-in-target.html","searchKeys":["unusedIncludesInTarget","open override fun unusedIncludesInTarget(unusedIncludes: Set<String>)","com.squareup.wire.WireTestLogger.unusedIncludesInTarget"]},{"name":"open override fun unusedPrunes(unusedPrunes: Set<String>)","description":"com.squareup.wire.WireTestLogger.unusedPrunes","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-prunes.html","searchKeys":["unusedPrunes","open override fun unusedPrunes(unusedPrunes: Set<String>)","com.squareup.wire.WireTestLogger.unusedPrunes"]},{"name":"open override fun unusedRoots(unusedRoots: Set<String>)","description":"com.squareup.wire.WireTestLogger.unusedRoots","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-roots.html","searchKeys":["unusedRoots","open override fun unusedRoots(unusedRoots: Set<String>)","com.squareup.wire.WireTestLogger.unusedRoots"]},{"name":"val artifactHandled: ArrayDeque<Triple<Path, String, String>>","description":"com.squareup.wire.WireTestLogger.artifactHandled","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/artifact-handled.html","searchKeys":["artifactHandled","val artifactHandled: ArrayDeque<Triple<Path, String, String>>","com.squareup.wire.WireTestLogger.artifactHandled"]},{"name":"val artifactSkipped: ArrayDeque<Pair<ProtoType, String>>","description":"com.squareup.wire.WireTestLogger.artifactSkipped","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/artifact-skipped.html","searchKeys":["artifactSkipped","val artifactSkipped: ArrayDeque<Pair<ProtoType, String>>","com.squareup.wire.WireTestLogger.artifactSkipped"]},{"name":"val unusedExcludesInTarget: ArrayDeque<Set<String>>","description":"com.squareup.wire.WireTestLogger.unusedExcludesInTarget","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-excludes-in-target.html","searchKeys":["unusedExcludesInTarget","val unusedExcludesInTarget: ArrayDeque<Set<String>>","com.squareup.wire.WireTestLogger.unusedExcludesInTarget"]},{"name":"val unusedIncludesInTarget: ArrayDeque<Set<String>>","description":"com.squareup.wire.WireTestLogger.unusedIncludesInTarget","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-includes-in-target.html","searchKeys":["unusedIncludesInTarget","val unusedIncludesInTarget: ArrayDeque<Set<String>>","com.squareup.wire.WireTestLogger.unusedIncludesInTarget"]},{"name":"val unusedPrunes: ArrayDeque<Set<String>>","description":"com.squareup.wire.WireTestLogger.unusedPrunes","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-prunes.html","searchKeys":["unusedPrunes","val unusedPrunes: ArrayDeque<Set<String>>","com.squareup.wire.WireTestLogger.unusedPrunes"]},{"name":"val unusedRoots: ArrayDeque<Set<String>>","description":"com.squareup.wire.WireTestLogger.unusedRoots","location":"wire-schema-tests/com.squareup.wire/-wire-test-logger/unused-roots.html","searchKeys":["unusedRoots","val unusedRoots: ArrayDeque<Set<String>>","com.squareup.wire.WireTestLogger.unusedRoots"]}]