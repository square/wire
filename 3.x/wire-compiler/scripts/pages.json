[{"name":"class DryRunFileSystem(delegate: FileSystem) : ForwardingFileSystem","description":"com.squareup.wire.DryRunFileSystem","location":"wire-compiler/com.squareup.wire/-dry-run-file-system/index.html","searchKeys":["DryRunFileSystem","class DryRunFileSystem(delegate: FileSystem) : ForwardingFileSystem","com.squareup.wire.DryRunFileSystem"]},{"name":"class WireCompiler","description":"com.squareup.wire.WireCompiler","location":"wire-compiler/com.squareup.wire/-wire-compiler/index.html","searchKeys":["WireCompiler","class WireCompiler","com.squareup.wire.WireCompiler"]},{"name":"const val CODE_GENERATED_BY_WIRE: String","description":"com.squareup.wire.WireCompiler.Companion.CODE_GENERATED_BY_WIRE","location":"wire-compiler/com.squareup.wire/-wire-compiler/-companion/-c-o-d-e_-g-e-n-e-r-a-t-e-d_-b-y_-w-i-r-e.html","searchKeys":["CODE_GENERATED_BY_WIRE","const val CODE_GENERATED_BY_WIRE: String","com.squareup.wire.WireCompiler.Companion.CODE_GENERATED_BY_WIRE"]},{"name":"constructor(delegate: FileSystem)","description":"com.squareup.wire.DryRunFileSystem.DryRunFileSystem","location":"wire-compiler/com.squareup.wire/-dry-run-file-system/-dry-run-file-system.html","searchKeys":["DryRunFileSystem","constructor(delegate: FileSystem)","com.squareup.wire.DryRunFileSystem.DryRunFileSystem"]},{"name":"constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String)","description":"com.squareup.wire.schema.SwiftTarget.SwiftTarget","location":"wire-compiler/com.squareup.wire.schema/-swift-target/-swift-target.html","searchKeys":["SwiftTarget","constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String)","com.squareup.wire.schema.SwiftTarget.SwiftTarget"]},{"name":"constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, android: Boolean = false, androidAnnotations: Boolean = false, compact: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, buildersOnly: Boolean = false)","description":"com.squareup.wire.schema.JavaTarget.JavaTarget","location":"wire-compiler/com.squareup.wire.schema/-java-target/-java-target.html","searchKeys":["JavaTarget","constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, android: Boolean = false, androidAnnotations: Boolean = false, compact: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, buildersOnly: Boolean = false)","com.squareup.wire.schema.JavaTarget.JavaTarget"]},{"name":"constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false)","description":"com.squareup.wire.schema.KotlinTarget.KotlinTarget","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/-kotlin-target.html","searchKeys":["KotlinTarget","constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, android: Boolean = false, javaInterop: Boolean = false, emitDeclaredOptions: Boolean = true, emitAppliedOptions: Boolean = true, rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, rpcRole: RpcRole = RpcRole.CLIENT, singleMethodServices: Boolean = false, boxOneOfsMinSize: Int, nameSuffix: String? = null, buildersOnly: Boolean = false, escapeKotlinKeywords: Boolean = false, enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false)","com.squareup.wire.schema.KotlinTarget.KotlinTarget"]},{"name":"constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, options: Map<String, String> = mapOf(), schemaHandlerFactory: SchemaHandler.Factory)","description":"com.squareup.wire.schema.CustomTarget.CustomTarget","location":"wire-compiler/com.squareup.wire.schema/-custom-target/-custom-target.html","searchKeys":["CustomTarget","constructor(includes: List<String> = listOf(\"*\"), excludes: List<String> = listOf(), exclusive: Boolean = true, outDirectory: String, options: Map<String, String> = mapOf(), schemaHandlerFactory: SchemaHandler.Factory)","com.squareup.wire.schema.CustomTarget.CustomTarget"]},{"name":"constructor(outDirectory: String)","description":"com.squareup.wire.schema.ProtoTarget.ProtoTarget","location":"wire-compiler/com.squareup.wire.schema/-proto-target/-proto-target.html","searchKeys":["ProtoTarget","constructor(outDirectory: String)","com.squareup.wire.schema.ProtoTarget.ProtoTarget"]},{"name":"data class CustomTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val options: Map<String, String> = mapOf(), val schemaHandlerFactory: SchemaHandler.Factory) : Target","description":"com.squareup.wire.schema.CustomTarget","location":"wire-compiler/com.squareup.wire.schema/-custom-target/index.html","searchKeys":["CustomTarget","data class CustomTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val options: Map<String, String> = mapOf(), val schemaHandlerFactory: SchemaHandler.Factory) : Target","com.squareup.wire.schema.CustomTarget"]},{"name":"data class JavaTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val android: Boolean = false, val androidAnnotations: Boolean = false, val compact: Boolean = false, val emitDeclaredOptions: Boolean = true, val emitAppliedOptions: Boolean = true, val buildersOnly: Boolean = false) : Target","description":"com.squareup.wire.schema.JavaTarget","location":"wire-compiler/com.squareup.wire.schema/-java-target/index.html","searchKeys":["JavaTarget","data class JavaTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val android: Boolean = false, val androidAnnotations: Boolean = false, val compact: Boolean = false, val emitDeclaredOptions: Boolean = true, val emitAppliedOptions: Boolean = true, val buildersOnly: Boolean = false) : Target","com.squareup.wire.schema.JavaTarget"]},{"name":"data class KotlinTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val android: Boolean = false, val javaInterop: Boolean = false, val emitDeclaredOptions: Boolean = true, val emitAppliedOptions: Boolean = true, val rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, val rpcRole: RpcRole = RpcRole.CLIENT, val singleMethodServices: Boolean = false, val boxOneOfsMinSize: Int, val nameSuffix: String? = null, val buildersOnly: Boolean = false, val escapeKotlinKeywords: Boolean = false, val enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false) : Target","description":"com.squareup.wire.schema.KotlinTarget","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/index.html","searchKeys":["KotlinTarget","data class KotlinTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String, val android: Boolean = false, val javaInterop: Boolean = false, val emitDeclaredOptions: Boolean = true, val emitAppliedOptions: Boolean = true, val rpcCallStyle: RpcCallStyle = RpcCallStyle.SUSPENDING, val rpcRole: RpcRole = RpcRole.CLIENT, val singleMethodServices: Boolean = false, val boxOneOfsMinSize: Int, val nameSuffix: String? = null, val buildersOnly: Boolean = false, val escapeKotlinKeywords: Boolean = false, val enumMode: EnumMode = EnumMode.ENUM_CLASS, emitProtoReader32: Boolean = false, mutableTypes: Boolean = false, explicitStreamingCalls: Boolean = false) : Target","com.squareup.wire.schema.KotlinTarget"]},{"name":"data class ProtoTarget(val outDirectory: String) : Target","description":"com.squareup.wire.schema.ProtoTarget","location":"wire-compiler/com.squareup.wire.schema/-proto-target/index.html","searchKeys":["ProtoTarget","data class ProtoTarget(val outDirectory: String) : Target","com.squareup.wire.schema.ProtoTarget"]},{"name":"data class SwiftTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String) : Target","description":"com.squareup.wire.schema.SwiftTarget","location":"wire-compiler/com.squareup.wire.schema/-swift-target/index.html","searchKeys":["SwiftTarget","data class SwiftTarget(val includes: List<String> = listOf(\"*\"), val excludes: List<String> = listOf(), val exclusive: Boolean = true, val outDirectory: String) : Target","com.squareup.wire.schema.SwiftTarget"]},{"name":"fun compile()","description":"com.squareup.wire.WireCompiler.compile","location":"wire-compiler/com.squareup.wire/-wire-compiler/compile.html","searchKeys":["compile","fun compile()","com.squareup.wire.WireCompiler.compile"]},{"name":"fun forArgs(fileSystem: FileSystem = FileSystem.SYSTEM, logger: WireLogger = ConsoleWireLogger(), vararg args: String): WireCompiler","description":"com.squareup.wire.WireCompiler.Companion.forArgs","location":"wire-compiler/com.squareup.wire/-wire-compiler/-companion/for-args.html","searchKeys":["forArgs","fun forArgs(fileSystem: FileSystem = FileSystem.SYSTEM, logger: WireLogger = ConsoleWireLogger(), vararg args: String): WireCompiler","com.squareup.wire.WireCompiler.Companion.forArgs"]},{"name":"fun forArgs(fileSystem: FileSystem, logger: WireLogger, vararg args: String): WireCompiler","description":"com.squareup.wire.WireCompiler.Companion.forArgs","location":"wire-compiler/com.squareup.wire/-wire-compiler/-companion/for-args.html","searchKeys":["forArgs","fun forArgs(fileSystem: FileSystem, logger: WireLogger, vararg args: String): WireCompiler","com.squareup.wire.WireCompiler.Companion.forArgs"]},{"name":"fun main(args: Array<String>)","description":"com.squareup.wire.WireCompiler.Companion.main","location":"wire-compiler/com.squareup.wire/-wire-compiler/-companion/main.html","searchKeys":["main","fun main(args: Array<String>)","com.squareup.wire.WireCompiler.Companion.main"]},{"name":"fun newSchemaHandler(schemaHandlerFactoryClass: String): SchemaHandler.Factory","description":"com.squareup.wire.schema.newSchemaHandler","location":"wire-compiler/com.squareup.wire.schema/new-schema-handler.html","searchKeys":["newSchemaHandler","fun newSchemaHandler(schemaHandlerFactoryClass: String): SchemaHandler.Factory","com.squareup.wire.schema.newSchemaHandler"]},{"name":"object Companion","description":"com.squareup.wire.WireCompiler.Companion","location":"wire-compiler/com.squareup.wire/-wire-compiler/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.wire.WireCompiler.Companion"]},{"name":"open override fun appendingSink(file: Path, mustExist: Boolean): Sink","description":"com.squareup.wire.DryRunFileSystem.appendingSink","location":"wire-compiler/com.squareup.wire/-dry-run-file-system/appending-sink.html","searchKeys":["appendingSink","open override fun appendingSink(file: Path, mustExist: Boolean): Sink","com.squareup.wire.DryRunFileSystem.appendingSink"]},{"name":"open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","description":"com.squareup.wire.schema.CustomTarget.copyTarget","location":"wire-compiler/com.squareup.wire.schema/-custom-target/copy-target.html","searchKeys":["copyTarget","open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","com.squareup.wire.schema.CustomTarget.copyTarget"]},{"name":"open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","description":"com.squareup.wire.schema.JavaTarget.copyTarget","location":"wire-compiler/com.squareup.wire.schema/-java-target/copy-target.html","searchKeys":["copyTarget","open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","com.squareup.wire.schema.JavaTarget.copyTarget"]},{"name":"open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","description":"com.squareup.wire.schema.KotlinTarget.copyTarget","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/copy-target.html","searchKeys":["copyTarget","open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","com.squareup.wire.schema.KotlinTarget.copyTarget"]},{"name":"open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","description":"com.squareup.wire.schema.ProtoTarget.copyTarget","location":"wire-compiler/com.squareup.wire.schema/-proto-target/copy-target.html","searchKeys":["copyTarget","open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","com.squareup.wire.schema.ProtoTarget.copyTarget"]},{"name":"open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","description":"com.squareup.wire.schema.SwiftTarget.copyTarget","location":"wire-compiler/com.squareup.wire.schema/-swift-target/copy-target.html","searchKeys":["copyTarget","open override fun copyTarget(includes: List<String>, excludes: List<String>, exclusive: Boolean, outDirectory: String): Target","com.squareup.wire.schema.SwiftTarget.copyTarget"]},{"name":"open override fun newHandler(): SchemaHandler","description":"com.squareup.wire.schema.CustomTarget.newHandler","location":"wire-compiler/com.squareup.wire.schema/-custom-target/new-handler.html","searchKeys":["newHandler","open override fun newHandler(): SchemaHandler","com.squareup.wire.schema.CustomTarget.newHandler"]},{"name":"open override fun newHandler(): SchemaHandler","description":"com.squareup.wire.schema.JavaTarget.newHandler","location":"wire-compiler/com.squareup.wire.schema/-java-target/new-handler.html","searchKeys":["newHandler","open override fun newHandler(): SchemaHandler","com.squareup.wire.schema.JavaTarget.newHandler"]},{"name":"open override fun newHandler(): SchemaHandler","description":"com.squareup.wire.schema.KotlinTarget.newHandler","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/new-handler.html","searchKeys":["newHandler","open override fun newHandler(): SchemaHandler","com.squareup.wire.schema.KotlinTarget.newHandler"]},{"name":"open override fun newHandler(): SchemaHandler","description":"com.squareup.wire.schema.ProtoTarget.newHandler","location":"wire-compiler/com.squareup.wire.schema/-proto-target/new-handler.html","searchKeys":["newHandler","open override fun newHandler(): SchemaHandler","com.squareup.wire.schema.ProtoTarget.newHandler"]},{"name":"open override fun newHandler(): SchemaHandler","description":"com.squareup.wire.schema.SwiftTarget.newHandler","location":"wire-compiler/com.squareup.wire.schema/-swift-target/new-handler.html","searchKeys":["newHandler","open override fun newHandler(): SchemaHandler","com.squareup.wire.schema.SwiftTarget.newHandler"]},{"name":"open override fun openReadWrite(file: Path, mustCreate: Boolean, mustExist: Boolean): FileHandle","description":"com.squareup.wire.DryRunFileSystem.openReadWrite","location":"wire-compiler/com.squareup.wire/-dry-run-file-system/open-read-write.html","searchKeys":["openReadWrite","open override fun openReadWrite(file: Path, mustCreate: Boolean, mustExist: Boolean): FileHandle","com.squareup.wire.DryRunFileSystem.openReadWrite"]},{"name":"open override fun sink(file: Path, mustCreate: Boolean): Sink","description":"com.squareup.wire.DryRunFileSystem.sink","location":"wire-compiler/com.squareup.wire/-dry-run-file-system/sink.html","searchKeys":["sink","open override fun sink(file: Path, mustCreate: Boolean): Sink","com.squareup.wire.DryRunFileSystem.sink"]},{"name":"open override val excludes: List<String>","description":"com.squareup.wire.schema.CustomTarget.excludes","location":"wire-compiler/com.squareup.wire.schema/-custom-target/excludes.html","searchKeys":["excludes","open override val excludes: List<String>","com.squareup.wire.schema.CustomTarget.excludes"]},{"name":"open override val excludes: List<String>","description":"com.squareup.wire.schema.JavaTarget.excludes","location":"wire-compiler/com.squareup.wire.schema/-java-target/excludes.html","searchKeys":["excludes","open override val excludes: List<String>","com.squareup.wire.schema.JavaTarget.excludes"]},{"name":"open override val excludes: List<String>","description":"com.squareup.wire.schema.KotlinTarget.excludes","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/excludes.html","searchKeys":["excludes","open override val excludes: List<String>","com.squareup.wire.schema.KotlinTarget.excludes"]},{"name":"open override val excludes: List<String>","description":"com.squareup.wire.schema.ProtoTarget.excludes","location":"wire-compiler/com.squareup.wire.schema/-proto-target/excludes.html","searchKeys":["excludes","open override val excludes: List<String>","com.squareup.wire.schema.ProtoTarget.excludes"]},{"name":"open override val excludes: List<String>","description":"com.squareup.wire.schema.SwiftTarget.excludes","location":"wire-compiler/com.squareup.wire.schema/-swift-target/excludes.html","searchKeys":["excludes","open override val excludes: List<String>","com.squareup.wire.schema.SwiftTarget.excludes"]},{"name":"open override val exclusive: Boolean = false","description":"com.squareup.wire.schema.ProtoTarget.exclusive","location":"wire-compiler/com.squareup.wire.schema/-proto-target/exclusive.html","searchKeys":["exclusive","open override val exclusive: Boolean = false","com.squareup.wire.schema.ProtoTarget.exclusive"]},{"name":"open override val exclusive: Boolean = true","description":"com.squareup.wire.schema.CustomTarget.exclusive","location":"wire-compiler/com.squareup.wire.schema/-custom-target/exclusive.html","searchKeys":["exclusive","open override val exclusive: Boolean = true","com.squareup.wire.schema.CustomTarget.exclusive"]},{"name":"open override val exclusive: Boolean = true","description":"com.squareup.wire.schema.JavaTarget.exclusive","location":"wire-compiler/com.squareup.wire.schema/-java-target/exclusive.html","searchKeys":["exclusive","open override val exclusive: Boolean = true","com.squareup.wire.schema.JavaTarget.exclusive"]},{"name":"open override val exclusive: Boolean = true","description":"com.squareup.wire.schema.KotlinTarget.exclusive","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/exclusive.html","searchKeys":["exclusive","open override val exclusive: Boolean = true","com.squareup.wire.schema.KotlinTarget.exclusive"]},{"name":"open override val exclusive: Boolean = true","description":"com.squareup.wire.schema.SwiftTarget.exclusive","location":"wire-compiler/com.squareup.wire.schema/-swift-target/exclusive.html","searchKeys":["exclusive","open override val exclusive: Boolean = true","com.squareup.wire.schema.SwiftTarget.exclusive"]},{"name":"open override val includes: List<String>","description":"com.squareup.wire.schema.CustomTarget.includes","location":"wire-compiler/com.squareup.wire.schema/-custom-target/includes.html","searchKeys":["includes","open override val includes: List<String>","com.squareup.wire.schema.CustomTarget.includes"]},{"name":"open override val includes: List<String>","description":"com.squareup.wire.schema.JavaTarget.includes","location":"wire-compiler/com.squareup.wire.schema/-java-target/includes.html","searchKeys":["includes","open override val includes: List<String>","com.squareup.wire.schema.JavaTarget.includes"]},{"name":"open override val includes: List<String>","description":"com.squareup.wire.schema.KotlinTarget.includes","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/includes.html","searchKeys":["includes","open override val includes: List<String>","com.squareup.wire.schema.KotlinTarget.includes"]},{"name":"open override val includes: List<String>","description":"com.squareup.wire.schema.ProtoTarget.includes","location":"wire-compiler/com.squareup.wire.schema/-proto-target/includes.html","searchKeys":["includes","open override val includes: List<String>","com.squareup.wire.schema.ProtoTarget.includes"]},{"name":"open override val includes: List<String>","description":"com.squareup.wire.schema.SwiftTarget.includes","location":"wire-compiler/com.squareup.wire.schema/-swift-target/includes.html","searchKeys":["includes","open override val includes: List<String>","com.squareup.wire.schema.SwiftTarget.includes"]},{"name":"open override val outDirectory: String","description":"com.squareup.wire.schema.CustomTarget.outDirectory","location":"wire-compiler/com.squareup.wire.schema/-custom-target/out-directory.html","searchKeys":["outDirectory","open override val outDirectory: String","com.squareup.wire.schema.CustomTarget.outDirectory"]},{"name":"open override val outDirectory: String","description":"com.squareup.wire.schema.JavaTarget.outDirectory","location":"wire-compiler/com.squareup.wire.schema/-java-target/out-directory.html","searchKeys":["outDirectory","open override val outDirectory: String","com.squareup.wire.schema.JavaTarget.outDirectory"]},{"name":"open override val outDirectory: String","description":"com.squareup.wire.schema.KotlinTarget.outDirectory","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/out-directory.html","searchKeys":["outDirectory","open override val outDirectory: String","com.squareup.wire.schema.KotlinTarget.outDirectory"]},{"name":"open override val outDirectory: String","description":"com.squareup.wire.schema.ProtoTarget.outDirectory","location":"wire-compiler/com.squareup.wire.schema/-proto-target/out-directory.html","searchKeys":["outDirectory","open override val outDirectory: String","com.squareup.wire.schema.ProtoTarget.outDirectory"]},{"name":"open override val outDirectory: String","description":"com.squareup.wire.schema.SwiftTarget.outDirectory","location":"wire-compiler/com.squareup.wire.schema/-swift-target/out-directory.html","searchKeys":["outDirectory","open override val outDirectory: String","com.squareup.wire.schema.SwiftTarget.outDirectory"]},{"name":"val android: Boolean = false","description":"com.squareup.wire.schema.JavaTarget.android","location":"wire-compiler/com.squareup.wire.schema/-java-target/android.html","searchKeys":["android","val android: Boolean = false","com.squareup.wire.schema.JavaTarget.android"]},{"name":"val android: Boolean = false","description":"com.squareup.wire.schema.KotlinTarget.android","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/android.html","searchKeys":["android","val android: Boolean = false","com.squareup.wire.schema.KotlinTarget.android"]},{"name":"val androidAnnotations: Boolean = false","description":"com.squareup.wire.schema.JavaTarget.androidAnnotations","location":"wire-compiler/com.squareup.wire.schema/-java-target/android-annotations.html","searchKeys":["androidAnnotations","val androidAnnotations: Boolean = false","com.squareup.wire.schema.JavaTarget.androidAnnotations"]},{"name":"val boxOneOfsMinSize: Int","description":"com.squareup.wire.schema.KotlinTarget.boxOneOfsMinSize","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/box-one-ofs-min-size.html","searchKeys":["boxOneOfsMinSize","val boxOneOfsMinSize: Int","com.squareup.wire.schema.KotlinTarget.boxOneOfsMinSize"]},{"name":"val buildersOnly: Boolean = false","description":"com.squareup.wire.schema.JavaTarget.buildersOnly","location":"wire-compiler/com.squareup.wire.schema/-java-target/builders-only.html","searchKeys":["buildersOnly","val buildersOnly: Boolean = false","com.squareup.wire.schema.JavaTarget.buildersOnly"]},{"name":"val buildersOnly: Boolean = false","description":"com.squareup.wire.schema.KotlinTarget.buildersOnly","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/builders-only.html","searchKeys":["buildersOnly","val buildersOnly: Boolean = false","com.squareup.wire.schema.KotlinTarget.buildersOnly"]},{"name":"val compact: Boolean = false","description":"com.squareup.wire.schema.JavaTarget.compact","location":"wire-compiler/com.squareup.wire.schema/-java-target/compact.html","searchKeys":["compact","val compact: Boolean = false","com.squareup.wire.schema.JavaTarget.compact"]},{"name":"val customOptions: Map<String, String>","description":"com.squareup.wire.WireCompiler.customOptions","location":"wire-compiler/com.squareup.wire/-wire-compiler/custom-options.html","searchKeys":["customOptions","val customOptions: Map<String, String>","com.squareup.wire.WireCompiler.customOptions"]},{"name":"val customOut: String?","description":"com.squareup.wire.WireCompiler.customOut","location":"wire-compiler/com.squareup.wire/-wire-compiler/custom-out.html","searchKeys":["customOut","val customOut: String?","com.squareup.wire.WireCompiler.customOut"]},{"name":"val emitAndroid: Boolean","description":"com.squareup.wire.WireCompiler.emitAndroid","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-android.html","searchKeys":["emitAndroid","val emitAndroid: Boolean","com.squareup.wire.WireCompiler.emitAndroid"]},{"name":"val emitAndroidAnnotations: Boolean","description":"com.squareup.wire.WireCompiler.emitAndroidAnnotations","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-android-annotations.html","searchKeys":["emitAndroidAnnotations","val emitAndroidAnnotations: Boolean","com.squareup.wire.WireCompiler.emitAndroidAnnotations"]},{"name":"val emitAppliedOptions: Boolean","description":"com.squareup.wire.WireCompiler.emitAppliedOptions","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-applied-options.html","searchKeys":["emitAppliedOptions","val emitAppliedOptions: Boolean","com.squareup.wire.WireCompiler.emitAppliedOptions"]},{"name":"val emitAppliedOptions: Boolean = true","description":"com.squareup.wire.schema.JavaTarget.emitAppliedOptions","location":"wire-compiler/com.squareup.wire.schema/-java-target/emit-applied-options.html","searchKeys":["emitAppliedOptions","val emitAppliedOptions: Boolean = true","com.squareup.wire.schema.JavaTarget.emitAppliedOptions"]},{"name":"val emitAppliedOptions: Boolean = true","description":"com.squareup.wire.schema.KotlinTarget.emitAppliedOptions","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/emit-applied-options.html","searchKeys":["emitAppliedOptions","val emitAppliedOptions: Boolean = true","com.squareup.wire.schema.KotlinTarget.emitAppliedOptions"]},{"name":"val emitCompact: Boolean","description":"com.squareup.wire.WireCompiler.emitCompact","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-compact.html","searchKeys":["emitCompact","val emitCompact: Boolean","com.squareup.wire.WireCompiler.emitCompact"]},{"name":"val emitDeclaredOptions: Boolean","description":"com.squareup.wire.WireCompiler.emitDeclaredOptions","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-declared-options.html","searchKeys":["emitDeclaredOptions","val emitDeclaredOptions: Boolean","com.squareup.wire.WireCompiler.emitDeclaredOptions"]},{"name":"val emitDeclaredOptions: Boolean = true","description":"com.squareup.wire.schema.JavaTarget.emitDeclaredOptions","location":"wire-compiler/com.squareup.wire.schema/-java-target/emit-declared-options.html","searchKeys":["emitDeclaredOptions","val emitDeclaredOptions: Boolean = true","com.squareup.wire.schema.JavaTarget.emitDeclaredOptions"]},{"name":"val emitDeclaredOptions: Boolean = true","description":"com.squareup.wire.schema.KotlinTarget.emitDeclaredOptions","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/emit-declared-options.html","searchKeys":["emitDeclaredOptions","val emitDeclaredOptions: Boolean = true","com.squareup.wire.schema.KotlinTarget.emitDeclaredOptions"]},{"name":"val emitProtoReader32: Boolean","description":"com.squareup.wire.WireCompiler.emitProtoReader32","location":"wire-compiler/com.squareup.wire/-wire-compiler/emit-proto-reader32.html","searchKeys":["emitProtoReader32","val emitProtoReader32: Boolean","com.squareup.wire.WireCompiler.emitProtoReader32"]},{"name":"val enumMode: EnumMode","description":"com.squareup.wire.schema.KotlinTarget.enumMode","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/enum-mode.html","searchKeys":["enumMode","val enumMode: EnumMode","com.squareup.wire.schema.KotlinTarget.enumMode"]},{"name":"val escapeKotlinKeywords: Boolean = false","description":"com.squareup.wire.schema.KotlinTarget.escapeKotlinKeywords","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/escape-kotlin-keywords.html","searchKeys":["escapeKotlinKeywords","val escapeKotlinKeywords: Boolean = false","com.squareup.wire.schema.KotlinTarget.escapeKotlinKeywords"]},{"name":"val eventListenerFactoryClasses: List<String>","description":"com.squareup.wire.WireCompiler.eventListenerFactoryClasses","location":"wire-compiler/com.squareup.wire/-wire-compiler/event-listener-factory-classes.html","searchKeys":["eventListenerFactoryClasses","val eventListenerFactoryClasses: List<String>","com.squareup.wire.WireCompiler.eventListenerFactoryClasses"]},{"name":"val fs: FileSystem","description":"com.squareup.wire.WireCompiler.fs","location":"wire-compiler/com.squareup.wire/-wire-compiler/fs.html","searchKeys":["fs","val fs: FileSystem","com.squareup.wire.WireCompiler.fs"]},{"name":"val javaExclusive: Boolean","description":"com.squareup.wire.WireCompiler.javaExclusive","location":"wire-compiler/com.squareup.wire/-wire-compiler/java-exclusive.html","searchKeys":["javaExclusive","val javaExclusive: Boolean","com.squareup.wire.WireCompiler.javaExclusive"]},{"name":"val javaInterop: Boolean","description":"com.squareup.wire.WireCompiler.javaInterop","location":"wire-compiler/com.squareup.wire/-wire-compiler/java-interop.html","searchKeys":["javaInterop","val javaInterop: Boolean","com.squareup.wire.WireCompiler.javaInterop"]},{"name":"val javaInterop: Boolean = false","description":"com.squareup.wire.schema.KotlinTarget.javaInterop","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/java-interop.html","searchKeys":["javaInterop","val javaInterop: Boolean = false","com.squareup.wire.schema.KotlinTarget.javaInterop"]},{"name":"val javaOut: String?","description":"com.squareup.wire.WireCompiler.javaOut","location":"wire-compiler/com.squareup.wire/-wire-compiler/java-out.html","searchKeys":["javaOut","val javaOut: String?","com.squareup.wire.WireCompiler.javaOut"]},{"name":"val kotlinBoxOneOfsMinSize: Int","description":"com.squareup.wire.WireCompiler.kotlinBoxOneOfsMinSize","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-box-one-ofs-min-size.html","searchKeys":["kotlinBoxOneOfsMinSize","val kotlinBoxOneOfsMinSize: Int","com.squareup.wire.WireCompiler.kotlinBoxOneOfsMinSize"]},{"name":"val kotlinBuildersOnly: Boolean","description":"com.squareup.wire.WireCompiler.kotlinBuildersOnly","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-builders-only.html","searchKeys":["kotlinBuildersOnly","val kotlinBuildersOnly: Boolean","com.squareup.wire.WireCompiler.kotlinBuildersOnly"]},{"name":"val kotlinEnumMode: EnumMode","description":"com.squareup.wire.WireCompiler.kotlinEnumMode","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-enum-mode.html","searchKeys":["kotlinEnumMode","val kotlinEnumMode: EnumMode","com.squareup.wire.WireCompiler.kotlinEnumMode"]},{"name":"val kotlinEscapeKeywords: Boolean","description":"com.squareup.wire.WireCompiler.kotlinEscapeKeywords","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-escape-keywords.html","searchKeys":["kotlinEscapeKeywords","val kotlinEscapeKeywords: Boolean","com.squareup.wire.WireCompiler.kotlinEscapeKeywords"]},{"name":"val kotlinExclusive: Boolean","description":"com.squareup.wire.WireCompiler.kotlinExclusive","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-exclusive.html","searchKeys":["kotlinExclusive","val kotlinExclusive: Boolean","com.squareup.wire.WireCompiler.kotlinExclusive"]},{"name":"val kotlinExplicitStreamingCalls: Boolean","description":"com.squareup.wire.WireCompiler.kotlinExplicitStreamingCalls","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-explicit-streaming-calls.html","searchKeys":["kotlinExplicitStreamingCalls","val kotlinExplicitStreamingCalls: Boolean","com.squareup.wire.WireCompiler.kotlinExplicitStreamingCalls"]},{"name":"val kotlinNameSuffix: String?","description":"com.squareup.wire.WireCompiler.kotlinNameSuffix","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-name-suffix.html","searchKeys":["kotlinNameSuffix","val kotlinNameSuffix: String?","com.squareup.wire.WireCompiler.kotlinNameSuffix"]},{"name":"val kotlinOut: String?","description":"com.squareup.wire.WireCompiler.kotlinOut","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-out.html","searchKeys":["kotlinOut","val kotlinOut: String?","com.squareup.wire.WireCompiler.kotlinOut"]},{"name":"val kotlinRpcCallStyle: RpcCallStyle","description":"com.squareup.wire.WireCompiler.kotlinRpcCallStyle","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-rpc-call-style.html","searchKeys":["kotlinRpcCallStyle","val kotlinRpcCallStyle: RpcCallStyle","com.squareup.wire.WireCompiler.kotlinRpcCallStyle"]},{"name":"val kotlinRpcRole: RpcRole","description":"com.squareup.wire.WireCompiler.kotlinRpcRole","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-rpc-role.html","searchKeys":["kotlinRpcRole","val kotlinRpcRole: RpcRole","com.squareup.wire.WireCompiler.kotlinRpcRole"]},{"name":"val kotlinSingleMethodServices: Boolean","description":"com.squareup.wire.WireCompiler.kotlinSingleMethodServices","location":"wire-compiler/com.squareup.wire/-wire-compiler/kotlin-single-method-services.html","searchKeys":["kotlinSingleMethodServices","val kotlinSingleMethodServices: Boolean","com.squareup.wire.WireCompiler.kotlinSingleMethodServices"]},{"name":"val loadExhaustively: Boolean","description":"com.squareup.wire.WireCompiler.loadExhaustively","location":"wire-compiler/com.squareup.wire/-wire-compiler/load-exhaustively.html","searchKeys":["loadExhaustively","val loadExhaustively: Boolean","com.squareup.wire.WireCompiler.loadExhaustively"]},{"name":"val log: WireLogger","description":"com.squareup.wire.WireCompiler.log","location":"wire-compiler/com.squareup.wire/-wire-compiler/log.html","searchKeys":["log","val log: WireLogger","com.squareup.wire.WireCompiler.log"]},{"name":"val modules: Map<String, WireRun.Module>","description":"com.squareup.wire.WireCompiler.modules","location":"wire-compiler/com.squareup.wire/-wire-compiler/modules.html","searchKeys":["modules","val modules: Map<String, WireRun.Module>","com.squareup.wire.WireCompiler.modules"]},{"name":"val nameSuffix: String? = null","description":"com.squareup.wire.schema.KotlinTarget.nameSuffix","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/name-suffix.html","searchKeys":["nameSuffix","val nameSuffix: String? = null","com.squareup.wire.schema.KotlinTarget.nameSuffix"]},{"name":"val opaqueTypes: List<String>","description":"com.squareup.wire.WireCompiler.opaqueTypes","location":"wire-compiler/com.squareup.wire/-wire-compiler/opaque-types.html","searchKeys":["opaqueTypes","val opaqueTypes: List<String>","com.squareup.wire.WireCompiler.opaqueTypes"]},{"name":"val options: Map<String, String>","description":"com.squareup.wire.schema.CustomTarget.options","location":"wire-compiler/com.squareup.wire.schema/-custom-target/options.html","searchKeys":["options","val options: Map<String, String>","com.squareup.wire.schema.CustomTarget.options"]},{"name":"val permitPackageCycles: Boolean","description":"com.squareup.wire.WireCompiler.permitPackageCycles","location":"wire-compiler/com.squareup.wire/-wire-compiler/permit-package-cycles.html","searchKeys":["permitPackageCycles","val permitPackageCycles: Boolean","com.squareup.wire.WireCompiler.permitPackageCycles"]},{"name":"val protoPaths: List<String>","description":"com.squareup.wire.WireCompiler.protoPaths","location":"wire-compiler/com.squareup.wire/-wire-compiler/proto-paths.html","searchKeys":["protoPaths","val protoPaths: List<String>","com.squareup.wire.WireCompiler.protoPaths"]},{"name":"val rejectUnusedRootsOrPrunes: Boolean","description":"com.squareup.wire.WireCompiler.rejectUnusedRootsOrPrunes","location":"wire-compiler/com.squareup.wire/-wire-compiler/reject-unused-roots-or-prunes.html","searchKeys":["rejectUnusedRootsOrPrunes","val rejectUnusedRootsOrPrunes: Boolean","com.squareup.wire.WireCompiler.rejectUnusedRootsOrPrunes"]},{"name":"val rpcCallStyle: RpcCallStyle","description":"com.squareup.wire.schema.KotlinTarget.rpcCallStyle","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/rpc-call-style.html","searchKeys":["rpcCallStyle","val rpcCallStyle: RpcCallStyle","com.squareup.wire.schema.KotlinTarget.rpcCallStyle"]},{"name":"val rpcRole: RpcRole","description":"com.squareup.wire.schema.KotlinTarget.rpcRole","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/rpc-role.html","searchKeys":["rpcRole","val rpcRole: RpcRole","com.squareup.wire.schema.KotlinTarget.rpcRole"]},{"name":"val schemaHandlerFactory: SchemaHandler.Factory","description":"com.squareup.wire.schema.CustomTarget.schemaHandlerFactory","location":"wire-compiler/com.squareup.wire.schema/-custom-target/schema-handler-factory.html","searchKeys":["schemaHandlerFactory","val schemaHandlerFactory: SchemaHandler.Factory","com.squareup.wire.schema.CustomTarget.schemaHandlerFactory"]},{"name":"val schemaHandlerFactoryClass: String?","description":"com.squareup.wire.WireCompiler.schemaHandlerFactoryClass","location":"wire-compiler/com.squareup.wire/-wire-compiler/schema-handler-factory-class.html","searchKeys":["schemaHandlerFactoryClass","val schemaHandlerFactoryClass: String?","com.squareup.wire.WireCompiler.schemaHandlerFactoryClass"]},{"name":"val singleMethodServices: Boolean = false","description":"com.squareup.wire.schema.KotlinTarget.singleMethodServices","location":"wire-compiler/com.squareup.wire.schema/-kotlin-target/single-method-services.html","searchKeys":["singleMethodServices","val singleMethodServices: Boolean = false","com.squareup.wire.schema.KotlinTarget.singleMethodServices"]},{"name":"val sourceFileNames: List<String>","description":"com.squareup.wire.WireCompiler.sourceFileNames","location":"wire-compiler/com.squareup.wire/-wire-compiler/source-file-names.html","searchKeys":["sourceFileNames","val sourceFileNames: List<String>","com.squareup.wire.WireCompiler.sourceFileNames"]},{"name":"val swiftExclusive: Boolean","description":"com.squareup.wire.WireCompiler.swiftExclusive","location":"wire-compiler/com.squareup.wire/-wire-compiler/swift-exclusive.html","searchKeys":["swiftExclusive","val swiftExclusive: Boolean","com.squareup.wire.WireCompiler.swiftExclusive"]},{"name":"val swiftOut: String?","description":"com.squareup.wire.WireCompiler.swiftOut","location":"wire-compiler/com.squareup.wire/-wire-compiler/swift-out.html","searchKeys":["swiftOut","val swiftOut: String?","com.squareup.wire.WireCompiler.swiftOut"]},{"name":"val treeShakingRoots: List<String>","description":"com.squareup.wire.WireCompiler.treeShakingRoots","location":"wire-compiler/com.squareup.wire/-wire-compiler/tree-shaking-roots.html","searchKeys":["treeShakingRoots","val treeShakingRoots: List<String>","com.squareup.wire.WireCompiler.treeShakingRoots"]},{"name":"val treeShakingRubbish: List<String>","description":"com.squareup.wire.WireCompiler.treeShakingRubbish","location":"wire-compiler/com.squareup.wire/-wire-compiler/tree-shaking-rubbish.html","searchKeys":["treeShakingRubbish","val treeShakingRubbish: List<String>","com.squareup.wire.WireCompiler.treeShakingRubbish"]}]